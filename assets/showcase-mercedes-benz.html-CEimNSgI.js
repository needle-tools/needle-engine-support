import{_ as t,a as e,b as l,c as h,d as p,e as k,f as r,g as d,h as g,i as o,j as c,k as y,l as C,m as F}from"./14_RearUI-BXkGyr9N.js";import{_ as E,c as B,a as i,b as m,e as f,d as a,r as b,o as A}from"./app-9T6lAodh.js";const x={};function u(_,s){const n=b("sample");return A(),B("div",null,[s[0]||(s[0]=i("h2",{id:"",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#"},[i("span",null,"关于")])],-1)),s[1]||(s[1]=i("p",null,[a("你好，我的名字是 Kryštof，我做了一个关于 Needle 的研究项目。在 "),i("a",{href:"https://www.ishowroom.cz/home/",target:"_blank",rel:"noopener noreferrer"},"我们公司"),a("，我们想确定 Needle 如何能帮助我们的工作流程。我们有一个本地客户，专注于转售豪华汽车。我们已经使用 Unity 交付了一个移动应用和 VR 体验。我们在引擎中有大约 30 辆独特的汽车。我们计划扩展客户的网站，增加具有更多配置选项的视觉上令人愉悦的数字克隆。Needle 可以实现 Unity 和 Web 视觉效果之间的完美 1:1 转换。这将对我们的工作流程带来巨大的益处。这就是激发我们研究的原因。")],-1)),m(n,{src:"https://engine.needle.tools/demos/mercedes-benz-demo/"}),s[2]||(s[2]=f('<h2 id="-1" tabindex="-1"><a class="header-anchor" href="#-1"><span>背景</span></a></h2><p>我不太熟悉 javascript、typescript 或 three.js，所以我的观点是一个半有经验的 Unity 开发者，尝试以最简单的方式创建 Web 体验。对于那些可能建议使用 Unity WebGL 的人，遗憾的是它不起作用，并且在移动浏览器上不够灵活。Needle 是 💚</p><h2 id="-2" tabindex="-1"><a class="header-anchor" href="#-2"><span>光照</span></a></h2><p>我们的光照模型基于 Unity 中的反射探针。我们不需要任何平行光或点光源，只需要环境光。</p><p>我们使用这个天空盒：</p><p><img src="'+t+'" alt="天空盒"></p><p>在车漆上看起来像这样：</p><p><img src="'+e+'" alt="车漆"></p><p>然后为了增加一些细节，我添加了 2 个平行光，强度微不足道 (0.04)，以创建镜面高光。所以之前看起来像这样：</p><p><img src="'+l+'" alt="镜面关闭"></p><p>但添加平行光后，增加了更好的动态效果。通过更高的强度可以深化效果：</p><p><img src="'+h+'" alt="镜面开启"></p><h2 id="-3" tabindex="-1"><a class="header-anchor" href="#-3"><span>背景</span></a></h2><p>场景现在看起来像这样：</p><p><img src="'+p+'" alt="无背景"></p><p>黑色背景不太美观。因此，为了区分视觉天空盒和光照天空盒，我添加了一个反向球体，它包裹了整个地图。</p><p><img src="'+k+'" alt="带背景"></p><p>关于渐变，它从微弱的灰色变为白色。</p><p>只需适当的 UV 映射和一个单像素高的纹理即可轻松创建此效果，该纹理将定义渐变。</p><p>我在 Shader Graph 中创建了一个无光照着色器：</p><p><img src="'+r+'" alt="环境着色器"></p><p>我注意到颜色条带问题，所以我尝试实现抖动。坦率地说，它没有帮助消除伪影，但我敢肯定这个问题有一个简单的解决方案。所以着色器的上半部分基于物体空间中的 Y 轴采样渐变。下半部分试图消除颜色条带。</p><p>通过使用着色器，使用和迭代渐变更加简单。通过使用 Needle 的 Shadergraph markdown 资产，这甚至更简单！ 🌵</p><p><img src="'+d+'" alt="渐变"></p><h2 id="-4" tabindex="-1"><a class="header-anchor" href="#-4"><span>汽车模拟运动</span></a></h2><p>场景现在是静态的，因为没有任何东西移动。我们可以通过添加模拟运动感来抵消这一点。让我们从给轮子添加运动开始。</p><p>通过一个名为 Rotator 的简单组件，我们定义了一个轴及其上的速度。</p><p><img src="'+g+`" alt="旋转器"></p><div class="language-ts" data-highlighter="shiki" data-ext="ts" style="--shiki-light:#4c4f69;--shiki-dark:#c6d0f5;--shiki-light-bg:#eff1f5;--shiki-dark-bg:#303446;"><pre class="shiki shiki-themes catppuccin-latte catppuccin-frappe vp-code"><code><span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CA9EE6;">import</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;"> {</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;"> Behaviour</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">,</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;"> serializable </span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">}</span><span style="--shiki-light:#8839EF;--shiki-dark:#CA9EE6;"> from</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6D189;"> &quot;@needle-tools/engine&quot;</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CA9EE6;">export</span><span style="--shiki-light:#8839EF;--shiki-dark:#CA9EE6;"> enum</span><span style="--shiki-light:#DF8E1D;--shiki-light-font-style:italic;--shiki-dark:#E5C890;--shiki-dark-font-style:italic;"> RotationAxis</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;"> {</span></span>
<span class="line"><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">    X</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">,</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;"> Y</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">,</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;"> Z</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CA9EE6;">export</span><span style="--shiki-light:#8839EF;--shiki-dark:#CA9EE6;"> class</span><span style="--shiki-light:#DF8E1D;--shiki-light-font-style:italic;--shiki-dark:#E5C890;--shiki-dark-font-style:italic;"> Rotator</span><span style="--shiki-light:#8839EF;--shiki-dark:#CA9EE6;"> extends</span><span style="--shiki-light:#DF8E1D;--shiki-light-font-style:italic;--shiki-dark:#E5C890;--shiki-dark-font-style:italic;"> Behaviour</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;"> {</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-light-font-style:italic;--shiki-dark:#949CBB;--shiki-dark-font-style:italic;">    //@type RotationAxis</span></span>
<span class="line"><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#8CAAEE;--shiki-dark-font-style:italic;">    @serializable</span><span style="--shiki-light:#FE640B;--shiki-dark:#EF9F76;">()</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">    axis </span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">:</span><span style="--shiki-light:#DF8E1D;--shiki-light-font-style:italic;--shiki-dark:#E5C890;--shiki-dark-font-style:italic;"> RotationAxis </span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">=</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;"> RotationAxis</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">.</span><span style="--shiki-light:#FE640B;--shiki-dark:#EF9F76;">X</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#8CAAEE;--shiki-dark-font-style:italic;">    @serializable</span><span style="--shiki-light:#FE640B;--shiki-dark:#EF9F76;">()</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">    speed </span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">:</span><span style="--shiki-light:#8839EF;--shiki-dark:#CA9EE6;"> number</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;"> =</span><span style="--shiki-light:#FE640B;--shiki-dark:#EF9F76;"> 1</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#8CAAEE;--shiki-dark-font-style:italic;">    update</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">()</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;"> {</span></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CA9EE6;">        const</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;"> angle </span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">=</span><span style="--shiki-light:#D20F39;--shiki-dark:#E78284;"> this</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">.</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">speed </span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">*</span><span style="--shiki-light:#D20F39;--shiki-dark:#E78284;"> this</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">.</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">context</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">.</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">time</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">.</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">deltaTime</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">;</span></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CA9EE6;">        switch</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">(</span><span style="--shiki-light:#D20F39;--shiki-dark:#E78284;">this</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">.</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">axis) </span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">{</span></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CA9EE6;">            case</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;"> RotationAxis</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">.</span><span style="--shiki-light:#FE640B;--shiki-dark:#EF9F76;">X</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">:</span></span>
<span class="line"><span style="--shiki-light:#D20F39;--shiki-dark:#E78284;">                this</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">.</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">gameObject</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">.</span><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#8CAAEE;--shiki-dark-font-style:italic;">rotateX</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">(angle)</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">;</span></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CA9EE6;">                break</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">;</span></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CA9EE6;">            case</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;"> RotationAxis</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">.</span><span style="--shiki-light:#FE640B;--shiki-dark:#EF9F76;">Y</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">:</span></span>
<span class="line"><span style="--shiki-light:#D20F39;--shiki-dark:#E78284;">                this</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">.</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">gameObject</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">.</span><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#8CAAEE;--shiki-dark-font-style:italic;">rotateY</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">(angle)</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">;</span></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CA9EE6;">                break</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">;</span></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CA9EE6;">            case</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;"> RotationAxis</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">.</span><span style="--shiki-light:#FE640B;--shiki-dark:#EF9F76;">Z</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">:</span></span>
<span class="line"><span style="--shiki-light:#D20F39;--shiki-dark:#E78284;">                this</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">.</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">gameObject</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">.</span><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#8CAAEE;--shiki-dark-font-style:italic;">rotateZ</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">(angle)</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">;</span></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CA9EE6;">                break</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">;</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">        }</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">    }</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">}</span></span></code></pre></div><p>用户现在看到一辆车行驶在空虚之中，颜色不像任何东西，体验很乏味。我们想让模型有基础感，这通过添加一个网格并移动它来实现，这样看起来就像汽车正在移动。这是我们想要达到的效果：</p><p><img src="`+o+'" alt="运动"></p><p>网格的着色器由两部分组成。一个简单的网格平铺纹理，通过一个圆形渐变相乘使其边缘淡出。</p><p><img src="'+c+'" alt="网格"></p><h2 id="-5" tabindex="-1"><a class="header-anchor" href="#-5"><span>额外元素</span></a></h2><p>这个技术演示旨在展示汽车的功能。</p><p>让我们从高亮显示轮子开始。</p><p><img src="'+y+'" alt="轮子高亮"></p><p>将此着色器添加到平面会产生一个虚线圆，它以定义的速度旋转。结合世界空间 UI 和普通 Text 组件，这可以突出显示给定产品的一些有趣功能或参数。</p><p><img src="'+C+'" alt="轮子着色器"></p><p>展示完轮子后，我们想用关于产品的广泛信息来结束。在这种情况下，那就是汽车的全名以及一些可用的配置。</p><p><img src="'+F+'" alt="后部 UI"></p><h2 id="-6" tabindex="-1"><a class="header-anchor" href="#-6"><span>总结</span></a></h2><p>通过使用 Unity 的时间线，我们可以控制轮子虚线和文本何时显示。这与摄像机动画相辅相成。</p><h2 id="-7" tabindex="-1"><a class="header-anchor" href="#-7"><span>结论</span></a></h2><p>Needle Engine 对我们来说似乎是一个非常好的选择！</p><p>我们缺少一些功能。</p><p>例如，对 Lit Shader Graphs 的良好支持。但这不妨碍我们以 three.js 的方式创建着色器，并在 Unity 中为我们的内容团队创建类似的着色器来调整材质。</p><p>使用 Needle 非常棒！ 🌵</p><hr><p>页面由 AI 自动翻译</p>',50))])}const v=E(x,[["render",u]]),N=JSON.parse(`{"path":"/lang/zh/showcase-mercedes-benz.html","title":"Mercedes-Benz 展柜","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"Mercedes-Benz 展柜","editLink":false,"head":[["meta",{"name":"og:image","content":"https://engine.needle.tools/docs/.preview/mercedes benz_zh.png"}],["meta",{"name":"og:description","content":"---\\n你好，我的名字是 Kryštof，我做了一个关于 Needle 的研究项目。在 我们公司，我们想确定 Needle 如何能帮助我们的工作流程。我们有一个本地客户，专注于转售豪华汽车。我们已经使用 Unity 交付了一个移动应用和 VR 体验。我们在引擎中有大约 30 辆独特的汽车。我们计划扩展客户的网站，增加具有更多配置选项的视觉上令人愉悦的数字克隆。Needle 可以实现 Unity 和 Web 视觉效果之间的完美 1:1 转换。这将对我们的工作流程带来巨大的益处。这就是激发我们研究的原因。\\n我不太熟悉 javascript、typescript 或 three.js，所以我的观点是一个半有经验的 Unity 开发者，尝试以最简单的方式创建 Web 体验。对于那些可能建议使用 Unity WebGL 的人，遗憾的是它不起作用，并且在移动浏览器上不够灵活。Needle 是 💚\\n我们的光照模型基于 Unity 中的反射探针。我们不需要任何平行光或点光源，只需要环境光。\\n我们使用这个天空盒：\\n在车漆上看起来像这样：\\n然后为了增加一些细节，我添加了 2 个平行光，强度微不足道 (0.04)，以创建镜面高光。所以之前看起来像这样：\\n但添加平行光后，增加了更好的动态效果。通过更高的强度可以深化效果：\\n场景现在看起来像这样：\\n黑色背景不太美观。因此，为了区分视觉天空盒和光照天空盒，我添加了一个反向球体，它包裹了整个地图。\\n关于渐变，它从微弱的灰色变为白色。\\n只需适当的 UV 映射和一个单像素高的纹理即可轻松创建此效果，该纹理将定义渐变。\\n我在 Shader Graph 中创建了一个无光照着色器：\\n我注意到颜色条带问题，所以我尝试实现抖动。坦率地说，它没有帮助消除伪影，但我敢肯定这个问题有一个简单的解决方案。所以着色器的上半部分基于物体空间中的 Y 轴采样渐变。下半部分试图消除颜色条带。\\n通过使用着色器，使用和迭代渐变更加简单。通过使用 Needle 的 Shadergraph markdown 资产，这甚至更简单！ 🌵\\n场景现在是静态的，因为没有任何东西移动。我们可以通过添加模拟运动感来抵消这一点。让我们从给轮子添加运动开始。\\n通过一个名为 Rotator 的简单组件，我们定义了一个轴及其上的速度。\\nts twoslash\\nimport { Behaviour, serializable } from '@needle-tools/engine';\\nexport enum RotationAxis {\\nX, Y, Z\\n}\\nexport class Rotator extends Behaviour {\\n//@type RotationAxis\\n@serializable()\\naxis : RotationAxis = RotationAxis.X;\\n@serializable()\\nspeed : number = 1;\\nupdate() {\\nconst angle = this.speed  this.context.time.deltaTime"}]],"description":"---\\n你好，我的名字是 Kryštof，我做了一个关于 Needle 的研究项目。在 我们公司，我们想确定 Needle 如何能帮助我们的工作流程。我们有一个本地客户，专注于转售豪华汽车。我们已经使用 Unity 交付了一个移动应用和 VR 体验。我们在引擎中有大约 30 辆独特的汽车。我们计划扩展客户的网站，增加具有更多配置选项的视觉上令人愉悦的数字克隆。Needle 可以实现 Unity 和 Web 视觉效果之间的完美 1:1 转换。这将对我们的工作流程带来巨大的益处。这就是激发我们研究的原因。\\n我不太熟悉 javascript、typescript 或 three.js，所以我的观点是一个半有经验的 Unity 开发者，尝试以最简单的方式创建 Web 体验。对于那些可能建议使用 Unity WebGL 的人，遗憾的是它不起作用，并且在移动浏览器上不够灵活。Needle 是 💚\\n我们的光照模型基于 Unity 中的反射探针。我们不需要任何平行光或点光源，只需要环境光。\\n我们使用这个天空盒：\\n在车漆上看起来像这样：\\n然后为了增加一些细节，我添加了 2 个平行光，强度微不足道 (0.04)，以创建镜面高光。所以之前看起来像这样：\\n但添加平行光后，增加了更好的动态效果。通过更高的强度可以深化效果：\\n场景现在看起来像这样：\\n黑色背景不太美观。因此，为了区分视觉天空盒和光照天空盒，我添加了一个反向球体，它包裹了整个地图。\\n关于渐变，它从微弱的灰色变为白色。\\n只需适当的 UV 映射和一个单像素高的纹理即可轻松创建此效果，该纹理将定义渐变。\\n我在 Shader Graph 中创建了一个无光照着色器：\\n我注意到颜色条带问题，所以我尝试实现抖动。坦率地说，它没有帮助消除伪影，但我敢肯定这个问题有一个简单的解决方案。所以着色器的上半部分基于物体空间中的 Y 轴采样渐变。下半部分试图消除颜色条带。\\n通过使用着色器，使用和迭代渐变更加简单。通过使用 Needle 的 Shadergraph markdown 资产，这甚至更简单！ 🌵\\n场景现在是静态的，因为没有任何东西移动。我们可以通过添加模拟运动感来抵消这一点。让我们从给轮子添加运动开始。\\n通过一个名为 Rotator 的简单组件，我们定义了一个轴及其上的速度。\\nts twoslash\\nimport { Behaviour, serializable } from '@needle-tools/engine';\\nexport enum RotationAxis {\\nX, Y, Z\\n}\\nexport class Rotator extends Behaviour {\\n//@type RotationAxis\\n@serializable()\\naxis : RotationAxis = RotationAxis.X;\\n@serializable()\\nspeed : number = 1;\\nupdate() {\\nconst angle = this.speed  this.context.time.deltaTime"},"headers":[{"level":2,"title":"关于","slug":"","link":"#","children":[]},{"level":2,"title":"背景","slug":"-1","link":"#-1","children":[]},{"level":2,"title":"光照","slug":"-2","link":"#-2","children":[]},{"level":2,"title":"背景","slug":"-3","link":"#-3","children":[]},{"level":2,"title":"汽车模拟运动","slug":"-4","link":"#-4","children":[]},{"level":2,"title":"额外元素","slug":"-5","link":"#-5","children":[]},{"level":2,"title":"总结","slug":"-6","link":"#-6","children":[]},{"level":2,"title":"结论","slug":"-7","link":"#-7","children":[]}],"git":{"updatedTime":1745311490000,"contributors":[{"name":"Marcel Wiessler","username":"","email":"marcel@gaisterhand.de","commits":1}],"changelog":[{"hash":"25e22e2b0b9e4fc1e515be2b189c24864e21ac9f","time":1745311490000,"email":"marcel@gaisterhand.de","author":"Marcel Wiessler","message":"add multilanguage support"}]},"filePathRelative":"lang/zh/showcase-mercedes-benz.md"}`);export{v as comp,N as data};
