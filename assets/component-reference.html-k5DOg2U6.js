import{_ as i,c as s,a as e,e as n,d as o,b as a,w as d,r as l,o as c}from"./app-9T6lAodh.js";const h={};function m(p,t){const r=l("RouteLink");return c(),s("div",null,[t[16]||(t[16]=e("h1",{id:"needle-core-components",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#needle-core-components"},[e("span",null,"Needle Core Components")])],-1)),t[17]||(t[17]=e("p",null,"Here is a overview of some of the components that we provide. Many of them map to components and functionality in Unity, Blender or other integrations.",-1)),t[18]||(t[18]=e("p",null,[o("For a complete list please have a look at our "),e("a",{href:"https://engine.needle.tools/docs/api/latest",target:"_blank",rel:"noopener noreferrer"},"API docs"),o(".")],-1)),t[19]||(t[19]=e("p",null,"You can always add your own components or add wrappers for Unity components we haven't provided yet.",-1)),e("p",null,[t[1]||(t[1]=o("Learn more in the ")),a(r,{to:"/scripting.html"},{default:d(()=>t[0]||(t[0]=[o("Scripting")])),_:1}),t[2]||(t[2]=o(" section of our docs."))]),t[20]||(t[20]=n('<h2 id="audio" tabindex="-1"><a class="header-anchor" href="#audio"><span>Audio</span></a></h2><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>AudioListener</code></td><td></td></tr><tr><td><code>AudioSource</code></td><td>Use to play audio</td></tr></tbody></table><h2 id="animation" tabindex="-1"><a class="header-anchor" href="#animation"><span>Animation</span></a></h2><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>Animator</code> with <code>AnimatorController</code></td><td>Export with animation state machine, conditions, transitions</td></tr><tr><td><code>Animation</code></td><td>Most basic animation component. Only first clip is exported</td></tr><tr><td><code>PlayableDirector</code> with <code>TimelineAsset</code></td><td>Export powerful sequences to control animation, audio, state and more</td></tr></tbody></table><h2 id="rendering" tabindex="-1"><a class="header-anchor" href="#rendering"><span>Rendering</span></a></h2><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>Camera</code></td><td></td></tr><tr><td><code>Light</code></td><td>DirectionalLight, PointLight, Spotlight. Note that you can use it to bake light (e.g. Rectangular Light shapes) as well</td></tr><tr><td><code>XRFlag</code></td><td>Control when objects will be visible. E.g. only enable object when in AR</td></tr><tr><td><code>DeviceFlag</code></td><td>Control on which device objects will be visible</td></tr><tr><td><code>LODGroup</code></td><td></td></tr><tr><td><code>ParticleSystem</code></td><td>Experimental and currently not fully supported</td></tr><tr><td><code>VideoPlayer</code></td><td>Playback videos from url or referenced video file (will be copied to output on export). The VideoPlayer also supports streaming from MediaStream objects or <code>M3U8</code> livestream URLs</td></tr><tr><td><code>MeshRenderer</code></td><td>Used to handle rendering of objects including lightmapping and instancing</td></tr><tr><td><code>SkinnedMeshRenderer</code></td><td><em>See MeshRenderer</em></td></tr><tr><td><code>SpriteRenderer</code></td><td>Used to render Sprites and Spriteanimations</td></tr><tr><td><code>Volume</code> with <code>PostProcessing</code> asset</td><td>See <a href="#postprocessing">table below</a></td></tr></tbody></table><h3 id="postprocessing" tabindex="-1"><a class="header-anchor" href="#postprocessing"><span>Postprocessing</span></a></h3><p>Postprocessing effects use the <a href="https://www.npmjs.com/package/postprocessing" target="_blank" rel="noopener noreferrer">pmndrs postprocessing library</a> under the hood. This means you can also easily add your own custom effects and get an automatically optimized postprocessing pass.</p><ul><li><strong>Unity only</strong>: <em>Note that Postprocessing effects using a Volume in Unity is only supported with URP</em></li></ul><table><thead><tr><th>Effect Name</th><th></th></tr></thead><tbody><tr><td>Antialiasing</td><td><em>extra Unity Component</em></td></tr><tr><td>Bloom</td><td><em>via Volume asset</em></td></tr><tr><td>Chromatic Aberration</td><td><em>via Volume asset</em></td></tr><tr><td>Color Adjustments / Color Correction</td><td><em>via Volume asset</em></td></tr><tr><td>Depth Of Field</td><td><em>via Volume asset</em></td></tr><tr><td>Vignette</td><td><em>via Volume asset</em></td></tr><tr><td>ToneMappingEffect</td><td><em>via Volume asset or separate component</em></td></tr><tr><td>Pixelation</td><td></td></tr><tr><td>Screenspace Ambient Occlusion N8</td><td></td></tr><tr><td>Screenspace Ambient Occlusion</td><td></td></tr><tr><td>Tilt Shift Effect</td><td></td></tr><tr><td>SharpeningEffect</td><td></td></tr><tr><td><em>Your custom effect</em></td><td><a href="https://stackblitz.com/edit/needle-engine-custom-postprocessing-effect" target="_blank" rel="noopener noreferrer">See example on stackblitz</a></td></tr></tbody></table><h2 id="networking" tabindex="-1"><a class="header-anchor" href="#networking"><span>Networking</span></a></h2><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>SyncedRoom</code></td><td>Main networking component. Put in your scene to enable networking</td></tr><tr><td><code>Networking</code></td><td>Used to setup backend server for networking.</td></tr><tr><td><code>SyncedTransform</code></td><td>Automatically network object transformation</td></tr><tr><td><code>SyncedCamera</code></td><td>Automatically network camera position and view to other users in room. You can define how the camera is being rendered by referencing an object</td></tr><tr><td><code>WebXRSync</code></td><td>Networks WebXR avatars (AR and VR)</td></tr><tr><td><code>Voip</code></td><td>Enables voice-chat</td></tr><tr><td><code>Screensharing</code></td><td>Enables screen-sharing capabilities</td></tr></tbody></table><h2 id="interaction" tabindex="-1"><a class="header-anchor" href="#interaction"><span>Interaction</span></a></h2><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>EventSystem</code></td><td>Handles raising pointer events and UI events on objects in the scene</td></tr><tr><td><code>ObjectRaycater</code></td><td>Required for DragControls and Duplicatable</td></tr><tr><td><code>GraphicsRaycaster</code></td><td>Same as ObjectRaycaster but for UI elements</td></tr><tr><td><code>DragControls</code></td><td>Allows objects to be dragged in the scene. Requires raycaster in parent hierarchy, e.g. ObjectRaycaster</td></tr><tr><td><code>Duplicatable</code></td><td>Can duplicate assigned objects by drag. Requires DragControls</td></tr><tr><td><code>Interactable</code></td><td>Basic component to mark an object to be interactable.</td></tr><tr><td><code>OrbitControls</code></td><td>Add to camera to add camera orbit control functionality</td></tr><tr><td><code>SmoothFollow</code></td><td>Allows to interpolate smoothly to another object&#39;s transform</td></tr><tr><td><code>DeleteBox</code></td><td>Will destroy objects with the <code>Deletable</code> component when entering the box</td></tr><tr><td><code>Deletable</code></td><td>The GameObject this component is attached to will be deleted when it enters or intersects with a <code>DeleteBox</code></td></tr><tr><td><code>DropListener</code></td><td>Add to receive file drop events for uploading</td></tr><tr><td><code>SpatialTrigger</code></td><td>Use to raise event if an object enters a specific space or area. You can also use Physics events</td></tr><tr><td><code>SpatialTriggerReceiver</code></td><td>Use to receive events from SpatialTrigger</td></tr></tbody></table><h2 id="physics" tabindex="-1"><a class="header-anchor" href="#physics"><span>Physics</span></a></h2><p>Physics is implemented using <a href="https://rapier.rs/" target="_blank" rel="noopener noreferrer">Rapier</a>.</p><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>Rigidbody</code></td><td>Add to make an object react to gravity (or be kinematic and static)</td></tr><tr><td><code>BoxCollider</code></td><td>A Box collider shape that objects can collide with or raise trigger events when set to <code>trigger</code></td></tr><tr><td><code>SphereCollider</code></td><td><em>See BoxCollider</em></td></tr><tr><td><code>CapsuleCollider</code></td><td><em>See BoxCollider</em></td></tr><tr><td><code>MeshCollider</code></td><td><em>See BoxCollider</em></td></tr><tr><td>Physics Materials</td><td>Physics materials can be used to define e.g. the bouncyness of a collider</td></tr></tbody></table><h2 id="xr-webxr" tabindex="-1"><a class="header-anchor" href="#xr-webxr"><span>XR / WebXR</span></a></h2>',18)),e("p",null,[a(r,{to:"/xr.html"},{default:d(()=>t[3]||(t[3]=[o("Read the XR docs")])),_:1})]),e("table",null,[t[15]||(t[15]=e("thead",null,[e("tr",null,[e("th",null,"Name"),e("th",null,"Description")])],-1)),e("tbody",null,[t[6]||(t[6]=e("tr",null,[e("td",null,[e("code",null,"WebXR")]),e("td",null,"Add to scene for VR, AR and Passthrough support as well as rendering Avatar models")],-1)),e("tr",null,[e("td",null,[a(r,{to:"/everywhere-actions.html"},{default:d(()=>t[4]||(t[4]=[e("code",null,"USDZExporter",-1)])),_:1})]),t[5]||(t[5]=e("td",null,"Add to enable USD and Quicklook support",-1))]),t[7]||(t[7]=e("tr",null,[e("td",null,[e("code",null,"XRFlag")]),e("td",null,"Control when objects are visible, e.g. only in VR or AR or only in ThirdPerson")],-1)),t[8]||(t[8]=e("tr",null,[e("td",null,[e("code",null,"WebARSessionRoot")]),e("td",null,"Handles placement and scale of your scene in AR mode")],-1)),t[9]||(t[9]=e("tr",null,[e("td",null,[e("code",null,"WebARCameraBackground")]),e("td",null,"Add to access the AR camera image and apply effects or use it for rendering")],-1)),t[10]||(t[10]=e("tr",null,[e("td",null,[e("code",null,"WebXRImageTracking")]),e("td",null,"Assign images to be tracked and optionally instantiate an object at the image position")],-1)),t[11]||(t[11]=e("tr",null,[e("td",null,[e("code",null,"WebXRPlaneTracking")]),e("td",null,"Create plane meshes or colliders for tracked planes")],-1)),t[12]||(t[12]=e("tr",null,[e("td",null,[e("code",null,"XRControllerModel")]),e("td",null,"Can be added to render device controllers or hand models (will be created by default when enabled in the WebXR component)")],-1)),t[13]||(t[13]=e("tr",null,[e("td",null,[e("code",null,"XRControllerMovement")]),e("td",null,"Can be added to provide default movement and teleport controls")],-1)),t[14]||(t[14]=e("tr",null,[e("td",null,[e("code",null,"XRControllerFollow")]),e("td",null,"Can be added to any object in the scene and configured to follow either left or right hands or controllers")],-1))])]),t[21]||(t[21]=n('<h2 id="debugging" tabindex="-1"><a class="header-anchor" href="#debugging"><span>Debugging</span></a></h2><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>GridHelper</code></td><td>Draws a grid</td></tr><tr><td><code>BoxGizmo</code></td><td>Draws a box</td></tr><tr><td><code>AxesHelper</code></td><td>Draws XYZ axes</td></tr><tr><td></td><td>Note: When you&#39;re writing custom code you can use the static <code>Gizmos</code> methods for drawing debugging lines and shapes</td></tr></tbody></table><h2 id="runtime-file-input-output" tabindex="-1"><a class="header-anchor" href="#runtime-file-input-output"><span>Runtime File Input/Output</span></a></h2><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>GltfExport</code></td><td>Experimental! Use to export gltf from web runtime.</td></tr><tr><td><code>DropListener</code></td><td>Receive file drop events for uploading and networking</td></tr></tbody></table><h2 id="ui" tabindex="-1"><a class="header-anchor" href="#ui"><span>UI</span></a></h2><p>Spatial UI components are mapped from Unity UI (Canvas, not UI Toolkit) to <a href="https://github.com/felixmariotto/three-mesh-ui" target="_blank" rel="noopener noreferrer">three-mesh-ui</a>. UI can be animated.</p><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>Canvas</code></td><td>Unity&#39;s UI system. Needs to be in World Space mode right now.</td></tr><tr><td><code>Text (Legacy)</code></td><td>Render Text using Unity&#39;s UI Text component. Custom fonts are supported, a font atlas will be automatically generated on export. Use the font settings or the <code>FontAdditionalCharacters</code> component to control which characters are included in the atlas.<br><strong>Note</strong>: In Unity make sure to use the <code>Legacy/Text</code> component (<em>TextMeshPro</em> is not supported at the moment)</td></tr><tr><td><code>Button</code></td><td>Receives click events - use the onClick event to react to it. It can be added too 3D scene objects as well.<br><strong>Note</strong>: Make sure to use the <code>Legacy/Text</code> component in the Button (or create the Button via the <code>UI/Legacy/Button</code> Unity context menu since <em>TextMeshPro</em> is not supported at the moment)</td></tr><tr><td><code>Image</code></td><td>Renders a sprite image</td></tr><tr><td><code>RawImage</code></td><td>Renders a texture</td></tr><tr><td><code>InputField</code></td><td>Allows text input</td></tr></tbody></table><p><strong>Note</strong>: Depending on your project, often a mix of spatial and 2D UI makes sense for cross-platform projects where VR, AR, and screens are supported. Typically, you&#39;d build the 2D parts with HTML for best accessibility, and the 3D parts with geometric UIs that also support depth offsets (e.g. button hover states and the like).</p><h2 id="other" tabindex="-1"><a class="header-anchor" href="#other"><span>Other</span></a></h2><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>SceneSwitcher</code></td><td>Handles loading and unloading of other scenes or prefabs / glTF files. Has features to preload, change scenes via swiping, keyboard events or URL navigation</td></tr></tbody></table><h2 id="editor-only" tabindex="-1"><a class="header-anchor" href="#editor-only"><span>Editor Only</span></a></h2><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>ExportInfo</code></td><td>Main component for managing the web project(s) to e.g. install or start the web app</td></tr><tr><td><code>EditorSync</code></td><td>Add to enable networking material or component value changes to the running three.js app directly from the Unity Editor without having to reload</td></tr></tbody></table>',12))])}const u=i(h,[["render",m]]),g=JSON.parse(`{"path":"/component-reference.html","title":"Needle Core Components","lang":"en-US","frontmatter":{"title":"Needle Core Components","head":[["meta",{"name":"og:image","content":"https://engine.needle.tools/docs/.preview/needle core components.png"}],["meta",{"name":"og:description","content":"---\\nHere is a overview of some of the components that we provide. Many of them map to components and functionality in Unity, Blender or other integrations.\\nFor a complete list please have a look at our API docs.\\nYou can always add your own components or add wrappers for Unity components we haven't provided yet.\\nLearn more in the Scripting section of our docs."}]],"description":"---\\nHere is a overview of some of the components that we provide. Many of them map to components and functionality in Unity, Blender or other integrations.\\nFor a complete list please have a look at our API docs.\\nYou can always add your own components or add wrappers for Unity components we haven't provided yet.\\nLearn more in the Scripting section of our docs."},"headers":[{"level":2,"title":"Audio","slug":"audio","link":"#audio","children":[]},{"level":2,"title":"Animation","slug":"animation","link":"#animation","children":[]},{"level":2,"title":"Rendering","slug":"rendering","link":"#rendering","children":[{"level":3,"title":"Postprocessing","slug":"postprocessing","link":"#postprocessing","children":[]}]},{"level":2,"title":"Networking","slug":"networking","link":"#networking","children":[]},{"level":2,"title":"Interaction","slug":"interaction","link":"#interaction","children":[]},{"level":2,"title":"Physics","slug":"physics","link":"#physics","children":[]},{"level":2,"title":"XR / WebXR","slug":"xr-webxr","link":"#xr-webxr","children":[]},{"level":2,"title":"Debugging","slug":"debugging","link":"#debugging","children":[]},{"level":2,"title":"Runtime File Input/Output","slug":"runtime-file-input-output","link":"#runtime-file-input-output","children":[]},{"level":2,"title":"UI","slug":"ui","link":"#ui","children":[]},{"level":2,"title":"Other","slug":"other","link":"#other","children":[]},{"level":2,"title":"Editor Only","slug":"editor-only","link":"#editor-only","children":[]}],"git":{"updatedTime":1727974888000,"contributors":[{"name":"Marcel Wiessler","username":"","email":"marcel@gaisterhand.de","commits":20},{"name":"hybridherbst","username":"hybridherbst","email":"felix.herbst@gmail.com","commits":7,"url":"https://github.com/hybridherbst"},{"name":"Krystof","username":"Krystof","email":"kipash612@gmail.com","commits":1,"url":"https://github.com/Krystof"}],"changelog":[{"hash":"bf6b3deecd0658d5c65456f461982c69b101aeac","time":1727974888000,"email":"kipash612@gmail.com","author":"Krystof","message":"add remark about FontAdditionalCharacters"},{"hash":"2a5a5c3755373616b84a3bb1dcf1d6c1b5df0ffd","time":1727182460000,"email":"felix.herbst@gmail.com","author":"hybridherbst","message":"create download tiles, add section and sample about web component usage, add after-download forward URLs","tag":"release/3.48.2"},{"hash":"d1bb8a7520be74bd36c9a6e315b344597dbd07ea","time":1725399379000,"email":"felix.herbst@gmail.com","author":"hybridherbst","message":"start reordering header menu","tag":"release/3.47.9"},{"hash":"3a2ad8aee313c2fa8aef59f6c791b40567020fa9","time":1723795633000,"email":"marwie@users.noreply.github.com","author":"Marcel Wiessler","message":"Update component-reference.md"},{"hash":"0ba76318005e62e65d5c6f8dbf97b4ebdb77421f","time":1723795482000,"email":"marwie@users.noreply.github.com","author":"Marcel Wiessler","message":"Update component-reference.md"},{"hash":"706d61b78230ceb777280aaf04f4dfec5b07e20f","time":1723757940000,"email":"marwie@users.noreply.github.com","author":"Marcel Wiessler","message":"Update component-reference.md"},{"hash":"5c897709f55773248bd2d62a14583b8bfb983c0f","time":1720186684000,"email":"marwie@users.noreply.github.com","author":"Marcel Wiessler","message":"Update component-reference.md","tag":"release/3.45.2-pre"},{"hash":"803d40584fe7901cc4c5a2fb6289867824f463cd","time":1720186618000,"email":"marwie@users.noreply.github.com","author":"Marcel Wiessler","message":"Update component-reference.md"},{"hash":"aadc0e98282a04603f850eaac09562c2e1aab655","time":1706607816000,"email":"marcel@gaisterhand.de","author":"Marcel Wiessler","message":"Update component reference","tag":"release/3.32.12-exp"},{"hash":"64a5ad81c077acd464c2efad77b22a5896780b72","time":1695641932000,"email":"marwie@users.noreply.github.com","author":"Marcel Wiessler","message":"remove unity docs link","tag":"release/3.19.3"},{"hash":"17a527f1971f00b02bff7dfbe25a4769c1f4204a","time":1691834989000,"email":"marcel@gaisterhand.de","author":"Marcel Wiessler","message":"add some postprocessing documentation"},{"hash":"eca6ef4e43693dd3018f44555bb9a05eba4b6506","time":1688561213000,"email":"marcel@gaisterhand.de","author":"Marcel Wiessler","message":"Improve html tag generation"},{"hash":"4089dc33eb5d5f4d81c7b10542026cbc5afe1987","time":1684676441000,"email":"marcel@gaisterhand.de","author":"Marcel Wiessler","message":"Update component reference"},{"hash":"3017b8cb4d0f78b39a33bfef9a20ac6921e3a449","time":1684607994000,"email":"marcel@gaisterhand.de","author":"Marcel Wiessler","message":"Adjust table width, some links to typescript docs, test fontmatter description"},{"hash":"2c9b15c8fd2ceddd28377fced3697da661031141","time":1684592760000,"email":"marcel@gaisterhand.de","author":"Marcel Wiessler","message":"fix some docs, add nav links to sidebar that are always being shown"},{"hash":"5bb82744ee56f610895bb8bfaa3392eb297fcff4","time":1677321687000,"email":"marwie@users.noreply.github.com","author":"Marcel Wiessler","message":"Update font atlas info","tag":"release/2.63.1-pre"},{"hash":"6781c3931c954bad9ee1a68bc26cd8562aafe9f9","time":1677321401000,"email":"marwie@users.noreply.github.com","author":"Marcel Wiessler","message":"Add physics materials"},{"hash":"3b5a66300b7c1bc30aa5d8dee55137dbcb3e3d59","time":1677321316000,"email":"marwie@users.noreply.github.com","author":"Marcel Wiessler","message":"Update physics reference"},{"hash":"faab8f506b6231e57d842a852231c21b11aa55d9","time":1666542505000,"email":"marcel@gaisterhand.de","author":"Marcel Wiessler","message":"copyright + update scripting and remove external link icons"},{"hash":"015409d2ad159c388f26cb4ff705cc0b87b83150","time":1663151702000,"email":"marwie@users.noreply.github.com","author":"Marcel Wiessler","message":"Update component-reference.md","tag":"release/2.21.1-pre"},{"hash":"ca78a90f089281cc7a771c05807bfd6b0d333391","time":1661813719000,"email":"felix.herbst@gmail.com","author":"hybridherbst","message":"Update component-reference.md"},{"hash":"2be3fcae33d991545da301060b8248d43b54c13c","time":1661813600000,"email":"felix.herbst@gmail.com","author":"hybridherbst","message":"Update component-reference.md"},{"hash":"f5d0a33dadba54239e9604e9e74a0359963b1a7b","time":1661813556000,"email":"felix.herbst@gmail.com","author":"hybridherbst","message":"add notes regarding UI"},{"hash":"25463d8aec30f30e94ae13bd4858738d05dfb6d0","time":1661810446000,"email":"felix.herbst@gmail.com","author":"hybridherbst","message":"Update component-reference.md"},{"hash":"df27ffa64a1bac09c2d315130dd682afc3733122","time":1661244391000,"email":"marwie@users.noreply.github.com","author":"Marcel Wiessler","message":"Update component-reference.md"},{"hash":"66c5faab1c4d6260667380a32f526e87cfd4a886","time":1661155797000,"email":"marwie@users.noreply.github.com","author":"Marcel Wiessler","message":"Update component-reference.md"},{"hash":"1faf2c8f7a5e33923aee85eb17bee9a905192366","time":1660603197000,"email":"felix.herbst@gmail.com","author":"hybridherbst","message":"Update component-reference.md"},{"hash":"9816d3fc6509a7c4d7884069e4afc124bd9eed86","time":1651258076000,"email":"marcel@gaisterhand.de","author":"Marcel Wiessler","message":"add docs"}]},"filePathRelative":"component-reference.md"}`);export{u as comp,g as data};
