import{_ as n}from"./everywhere-actions-component-menu-BNi5PUdv.js";import{_ as l,c as h,e as a,b as e,a as s,r,o as d}from"./app-9T6lAodh.js";const k={};function p(o,i){const t=r("sample");return d(),h("div",null,[i[0]||(i[0]=a('<h2 id="everywhere-actions" tabindex="-1"><a class="header-anchor" href="#everywhere-actions"><span>什么是 Everywhere Actions？</span></a></h2><p>Needle 的 Everywhere Actions 是一组精心挑选的组件，可让您在 Unity 中创建交互式体验，而无需编写一行代码。它们旨在作为跨 Web、移动和 XR（<strong>包括 iOS 上的增强现实</strong>）体验的构建块。</p><p>从低级别的触发器和操作，可以构建更高级复杂的交互行为。</p><h3 id="" tabindex="-1"><a class="header-anchor" href="#"><span>支持的平台</span></a></h3><ul><li>桌面</li><li>移动 (Android / iOS)</li><li>VR 眼镜</li><li>AR 设备</li><li>iOS AR – QuickLook（是的，真的！）</li></ul><h2 id="everywhere-actions-1" tabindex="-1"><a class="header-anchor" href="#everywhere-actions-1"><span>如何使用 Everywhere Actions？</span></a></h2><p>对于 iOS 支持，请将 <code>USDZExporter</code> 组件添加到您的场景中。最好将其添加到与 <code>WebXR</code> 组件相同的对象上（但不是强制性的）</p><p>要向场景中的任何对象添加操作 选中它，然后点击 <code>Add Component &gt; Needle &gt; Everywhere Actions &gt; [Action]</code>。</p><p><img src="'+n+'" alt=""></p><h2 id="everywhere-actions-2" tabindex="-1"><a class="header-anchor" href="#everywhere-actions-2"><span>Everywhere Actions 列表</span></a></h2><table><thead><tr><th>Action</th><th>Description</th><th>Example Use Cases</th></tr></thead><tbody><tr><td>Play Animation on Click</td><td>播放 Animator 中选定的动画状态。播放后，可以选择转换到另一个动画。</td><td>产品演示、互动教程、角色移动</td></tr><tr><td>Change Material on Click</td><td>将一种材质替换为其他材质。所有使用该材质的对象将一起切换。</td><td>产品配置器、角色</td></tr><tr><td>Look At</td><td>使对象看向摄像机。</td><td>UI 元素、精灵、信息图、billboard 特效、可点击热点</td></tr><tr><td>Play Audio on Click</td><td>播放选定的音频片段。</td><td>音效、旁白、博物馆展览</td></tr><tr><td>Hide on Start</td><td>在场景启动时隐藏对象，以便稍后显示。</td><td></td></tr><tr><td>Set Active on Click</td><td>显示或隐藏对象。</td><td></td></tr><tr><td>Change Transform on Click</td><td>移动、旋转或缩放对象。允许绝对或相对移动。</td><td>角色、产品、UI 动画（对于更复杂的移动使用动画）</td></tr><tr><td>Audio Source</td><td>在启动时播放音频并持续循环。空间或非空间</td><td>背景音乐、环境音</td></tr><tr><td>WebXR Image Tracking</td><td>跟踪图像目标并显示或隐藏对象。</td><td>AR 体验、产品演示</td></tr></tbody></table><h2 id="-1" tabindex="-1"><a class="header-anchor" href="#-1"><span>示例</span></a></h2><h3 id="-2" tabindex="-1"><a class="header-anchor" href="#-2"><span>乐器</span></a></h3><p>演示空间音频、动画和交互。</p>',14)),e(t,{src:"https://engine.needle.tools/samples-uploads/musical-instrument"}),i[1]||(i[1]=s("h3",{id:"-3",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#-3"},[s("span",null,"简单角色控制器")])],-1)),i[2]||(i[2]=s("p",null,"演示组合动画、看向和移动。",-1)),e(t,{src:"https://engine.needle.tools/samples-uploads/usdz-characters"}),i[3]||(i[3]=a('<h3 id="-4" tabindex="-1"><a class="header-anchor" href="#-4"><span>图像跟踪</span></a></h3><p>演示如何将 3D 内容附加到自定义图像标记上。在 AR 中启动下面的场景，并将手机摄像头对准屏幕上的图像标记，或将其打印出来。</p><img src="https://engine.needle.tools/samples-uploads/image-tracking/assets/needle-marker.png" alt="Image Marker" width="300"><p><a href="https://engine.needle.tools/samples-uploads/image-tracking/assets/needle-marker.png" target="_blank">下载示例图像标记</a></p><p>**在 Android 上：**请在 Chrome Flags 中打开“WebXR Incubations”。您可以通过在 Android 手机的 Chrome 浏览器地址栏中粘贴 <a href="chrome://flags/#webxr-incubations" target="_blank" rel="noopener noreferrer">chrome://flags/#webxr-incubations</a> 来找到它们。</p>',5)),e(t,{src:"https://engine.needle.tools/samples-uploads/image-tracking"}),i[4]||(i[4]=s("h3",{id:"-5",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#-5"},[s("span",null,"交互式构建块概述")])],-1)),e(t,{src:"https://engine.needle.tools/samples-uploads/usdz-interactivity"}),i[5]||(i[5]=a(`<h2 id="everywhere-actions-3" tabindex="-1"><a class="header-anchor" href="#everywhere-actions-3"><span>创建您自己的 Everywhere Actions</span></a></h2><p>创建新的 Everywhere Actions 涉及到用 TypeScript 编写您的动作代码，这些代码将在浏览器和 WebXR 中使用，并使用我们的 TriggerBuilder 和 ActionBuilder API 为通过 QuickLook 在 iOS 上实现的增强现实创建匹配的设置。创建自定义动作时，请记住 QuickLook 可用的功能集是有限的。您仍然可以在浏览器和 WebXR 中使用您想要的任何代码，但 QuickLook 的行为可能需要从可用触发器和操作中构建一个近似值。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>通常，构建特定行为需要跳出思维定势，创造性地应用可用的低级动作。一个例子是“点击放置”动作——QuickLook 中没有光线投射或碰撞检测可用，但您可以用许多不可见的对象覆盖预期的放置区域，并使用“点击”触发器将要放置的对象移动到被点击的不可见对象的位置。</p></div><p>QuickLook 的触发器和操作基于 <a href="https://developer.apple.com/documentation/arkit/usdz_schemas_for_ar/actions_and_triggers" target="_blank" rel="noopener noreferrer">Apple 的 Preliminary Interactive USD Schemas</a></p><h3 id="-6" tabindex="-1"><a class="header-anchor" href="#-6"><span>代码示例</span></a></h3><p>以下是 <code>HideOnStart</code> 的实现示例，展示了如何创建同时支持浏览器和 QuickLook 的 Everywhere Action：</p><div class="language-ts" data-highlighter="shiki" data-ext="ts" style="--shiki-light:#4c4f69;--shiki-dark:#c6d0f5;--shiki-light-bg:#eff1f5;--shiki-dark-bg:#303446;"><pre class="shiki shiki-themes catppuccin-latte catppuccin-frappe vp-code"><code><span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CA9EE6;">import</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;"> {</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;"> Behaviour</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">,</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;"> UsdzBehaviour</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">,</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;"> BehaviorModel</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">,</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;"> TriggerBuilder</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">,</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;"> ActionBuilder</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">,</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;"> BehaviorExtension</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">,</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;"> USDObject</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">,</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;"> USDZExporterContext </span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">}</span><span style="--shiki-light:#8839EF;--shiki-dark:#CA9EE6;"> from</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6D189;"> &quot;@needle-tools/engine&quot;</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CA9EE6;">export</span><span style="--shiki-light:#8839EF;--shiki-dark:#CA9EE6;"> class</span><span style="--shiki-light:#DF8E1D;--shiki-light-font-style:italic;--shiki-dark:#E5C890;--shiki-dark-font-style:italic;"> HideOnStart</span><span style="--shiki-light:#8839EF;--shiki-dark:#CA9EE6;"> extends</span><span style="--shiki-light:#DF8E1D;--shiki-light-font-style:italic;--shiki-dark:#E5C890;--shiki-dark-font-style:italic;"> Behaviour</span><span style="--shiki-light:#8839EF;--shiki-dark:#CA9EE6;"> implements</span><span style="--shiki-light:#DF8E1D;--shiki-light-font-style:italic;--shiki-dark:#E5C890;--shiki-dark-font-style:italic;"> UsdzBehaviour</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#8CAAEE;--shiki-dark-font-style:italic;">    start</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">()</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;"> {</span></span>
<span class="line"><span style="--shiki-light:#D20F39;--shiki-dark:#E78284;">        this</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">.</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">gameObject</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">.</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">visible </span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">=</span><span style="--shiki-light:#FE640B;--shiki-dark:#EF9F76;"> false</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">;</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#8CAAEE;--shiki-dark-font-style:italic;">    createBehaviours</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">(</span><span style="--shiki-light:#E64553;--shiki-light-font-style:italic;--shiki-dark:#EA999C;--shiki-dark-font-style:italic;">ext</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">:</span><span style="--shiki-light:#DF8E1D;--shiki-light-font-style:italic;--shiki-dark:#E5C890;--shiki-dark-font-style:italic;"> BehaviorExtension</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">,</span><span style="--shiki-light:#E64553;--shiki-light-font-style:italic;--shiki-dark:#EA999C;--shiki-dark-font-style:italic;"> model</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">:</span><span style="--shiki-light:#DF8E1D;--shiki-light-font-style:italic;--shiki-dark:#E5C890;--shiki-dark-font-style:italic;"> USDObject</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">,</span><span style="--shiki-light:#E64553;--shiki-light-font-style:italic;--shiki-dark:#EA999C;--shiki-dark-font-style:italic;"> _context</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">:</span><span style="--shiki-light:#DF8E1D;--shiki-light-font-style:italic;--shiki-dark:#E5C890;--shiki-dark-font-style:italic;"> USDZExporterContext</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">)</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;"> {</span></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CA9EE6;">        if</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;"> (model</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">.</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">uuid </span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">===</span><span style="--shiki-light:#D20F39;--shiki-dark:#E78284;"> this</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">.</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">gameObject</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">.</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">uuid)</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">            ext</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">.</span><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#8CAAEE;--shiki-dark-font-style:italic;">addBehavior</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">(</span><span style="--shiki-light:#8839EF;--shiki-light-font-weight:bold;--shiki-dark:#CA9EE6;--shiki-dark-font-weight:bold;">new</span><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#8CAAEE;--shiki-dark-font-style:italic;"> BehaviorModel</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">(</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6D189;">&quot;HideOnStart_&quot;</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;"> +</span><span style="--shiki-light:#D20F39;--shiki-dark:#E78284;"> this</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">.</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">gameObject</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">.</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">name</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">,</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">                TriggerBuilder</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">.</span><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#8CAAEE;--shiki-dark-font-style:italic;">sceneStartTrigger</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">()</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">,</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">                ActionBuilder</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">.</span><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#8CAAEE;--shiki-dark-font-style:italic;">fadeAction</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">(model</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">,</span><span style="--shiki-light:#FE640B;--shiki-dark:#EF9F76;"> 0</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">,</span><span style="--shiki-light:#FE640B;--shiki-dark:#EF9F76;"> false</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">)</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">            ))</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">;</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#8CAAEE;--shiki-dark-font-style:italic;">    beforeCreateDocument</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">()</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;"> {</span></span>
<span class="line"><span style="--shiki-light:#D20F39;--shiki-dark:#E78284;">        this</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">.</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">gameObject</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">.</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">visible </span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">=</span><span style="--shiki-light:#FE640B;--shiki-dark:#EF9F76;"> true</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">;</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#8CAAEE;--shiki-dark-font-style:italic;">    afterCreateDocument</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">()</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;"> {</span></span>
<span class="line"><span style="--shiki-light:#D20F39;--shiki-dark:#E78284;">        this</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">.</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">gameObject</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">.</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">visible </span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">=</span><span style="--shiki-light:#FE640B;--shiki-dark:#EF9F76;"> false</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">;</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">    }</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">}</span></span></code></pre></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>通常，获得正确的行为将涉及从可用的_低级动作_组合_更高级别的动作_。例如，我们的“点击更改材质”动作由多个 <code>fadeActions</code> 组成，并在内部复制具有不同材质集的对象。通过精心构建这些动作，可以实现复杂的行为。</p></div><h3 id="-7" tabindex="-1"><a class="header-anchor" href="#-7"><span>构建您自己动作的低级方法</span></a></h3><table><thead><tr><th>Triggers</th><th></th></tr></thead><tbody><tr><td><code>TriggerBuilder.sceneStartTrigger</code></td><td></td></tr><tr><td><code>TriggerBuilder.tapTrigger</code></td><td></td></tr></tbody></table><table><thead><tr><th>Actions</th><th></th></tr></thead><tbody><tr><td><code>ActionBuilder.fadeAction</code></td><td></td></tr><tr><td><code>ActionBuilder.startAnimationAction</code></td><td></td></tr><tr><td><code>ActionBuilder.waitAction</code></td><td></td></tr><tr><td><code>ActionBuilder.lookAtCameraAction</code></td><td></td></tr><tr><td><code>ActionBuilder.emphasize</code></td><td></td></tr><tr><td><code>ActionBuilder.transformAction</code></td><td></td></tr><tr><td><code>ActionBuilder.playAudioAction</code></td><td></td></tr></tbody></table><table><thead><tr><th>Group Actions</th><th></th></tr></thead><tbody><tr><td><code>ActionBuilder.sequence</code></td><td></td></tr><tr><td><code>ActionBuilder.parallel</code></td><td></td></tr><tr><td><code>GroupAction.addAction</code></td><td></td></tr><tr><td><code>GroupAction.makeParallel</code></td><td></td></tr><tr><td><code>GroupAction.makeSequence</code></td><td></td></tr><tr><td><code>GroupAction.makeLooping</code></td><td></td></tr><tr><td><code>GroupAction.makeRepeat</code></td><td></td></tr></tbody></table><p>要查看我们内置的 Everywhere Actions 的实现，请查看 <code>src/engine-components/export/usdz/extensions/behavior/BehaviourComponents.ts</code>。</p><h2 id="-8" tabindex="-1"><a class="header-anchor" href="#-8"><span>延伸阅读</span></a></h2><p>以下页面提供更多您可以立即测试和探索的示例：</p><ul><li>访问我们的 <a href="https://engine.needle.tools/projects/ar-showcase/" target="_blank" rel="noopener noreferrer">AR Showcase Website</a>，其中有许多交互式 AR 示例，重点关注 iOS AR 和 Quicklook</li><li><a href="https://engine.needle.tools/samples/?overlay=samples&amp;tag=everywhere+actions" target="_blank" rel="noopener noreferrer">Needle Engine Everywhere Action Samples</a></li></ul><p>页面由 AI 自动翻译</p>`,17))])}const y=l(k,[["render",p]]),C=JSON.parse('{"path":"/lang/zh/everywhere-actions.html","title":"Everywhere Actions","lang":"zh-CN","frontmatter":{"title":"Everywhere Actions","head":[["meta",{"name":"og:image","content":"https://engine.needle.tools/docs/.preview/everywhere actions_zh.png"}],["meta",{"name":"og:description","content":"---\\nNeedle 的 Everywhere Actions 是一组精心挑选的组件，可让您在 Unity 中创建交互式体验，而无需编写一行代码。它们旨在作为跨 Web、移动和 XR（包括 iOS 上的增强现实）体验的构建块。\\n从低级别的触发器和操作，可以构建更高级复杂的交互行为。"}]],"description":"---\\nNeedle 的 Everywhere Actions 是一组精心挑选的组件，可让您在 Unity 中创建交互式体验，而无需编写一行代码。它们旨在作为跨 Web、移动和 XR（包括 iOS 上的增强现实）体验的构建块。\\n从低级别的触发器和操作，可以构建更高级复杂的交互行为。"},"headers":[{"level":2,"title":"什么是 Everywhere Actions？","slug":"everywhere-actions","link":"#everywhere-actions","children":[{"level":3,"title":"支持的平台","slug":"","link":"#","children":[]}]},{"level":2,"title":"如何使用 Everywhere Actions？","slug":"everywhere-actions-1","link":"#everywhere-actions-1","children":[]},{"level":2,"title":"Everywhere Actions 列表","slug":"everywhere-actions-2","link":"#everywhere-actions-2","children":[]},{"level":2,"title":"示例","slug":"-1","link":"#-1","children":[{"level":3,"title":"乐器","slug":"-2","link":"#-2","children":[]},{"level":3,"title":"简单角色控制器","slug":"-3","link":"#-3","children":[]},{"level":3,"title":"图像跟踪","slug":"-4","link":"#-4","children":[]},{"level":3,"title":"交互式构建块概述","slug":"-5","link":"#-5","children":[]}]},{"level":2,"title":"创建您自己的 Everywhere Actions","slug":"everywhere-actions-3","link":"#everywhere-actions-3","children":[{"level":3,"title":"代码示例","slug":"-6","link":"#-6","children":[]},{"level":3,"title":"构建您自己动作的低级方法","slug":"-7","link":"#-7","children":[]}]},{"level":2,"title":"延伸阅读","slug":"-8","link":"#-8","children":[]}],"git":{"updatedTime":1745311490000,"contributors":[{"name":"Marcel Wiessler","username":"","email":"marcel@gaisterhand.de","commits":1}],"changelog":[{"hash":"25e22e2b0b9e4fc1e515be2b189c24864e21ac9f","time":1745311490000,"email":"marcel@gaisterhand.de","author":"Marcel Wiessler","message":"add multilanguage support"}]},"filePathRelative":"lang/zh/everywhere-actions.md"}');export{y as comp,C as data};
