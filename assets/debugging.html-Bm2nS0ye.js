import{_ as t}from"./vscode-start-debugging-DkxYlFJc.js";import{_ as n,c as r,e as s,a,d as i,b as o,w as h,r as d,o as p}from"./app-9T6lAodh.js";const g={};function k(c,e){const l=d("RouteLink");return p(),r("div",null,[e[5]||(e[5]=s('<h2 id="useful-resources-for-working-with-gltf" tabindex="-1"><a class="header-anchor" href="#useful-resources-for-working-with-gltf"><span>Useful resources for working with glTF</span></a></h2><p>glTF या glb फाइलों को ऑनलाइन जांचने के लिए:</p><ul><li><a href="https://gltf.report/" target="_blank" rel="noopener noreferrer">gltf.report</a> - three.js पर आधारित</li><li><a href="https://modelviewer.dev/editor" target="_blank" rel="noopener noreferrer">modelviewer.dev/editor</a> - three.js पर आधारित</li><li><a href="https://github.khronos.org/glTF-Sample-Viewer-Release/" target="_blank" rel="noopener noreferrer">Khronos glTF Sample Viewer</a></li><li><a href="https://sandbox.babylonjs.com/" target="_blank" rel="noopener noreferrer">Babylon Sandbox</a></li><li><a href="https://github.khronos.org/glTF-Validator/" target="_blank" rel="noopener noreferrer">glTF Validator</a></li></ul><p>उन्हें स्थानीय रूप से जांचने के लिए:</p><ul><li>glTF और glb के बीच बदलने के लिए <a href="https://apps.microsoft.com/store/detail/gltf-shell-extensions/9NPGVJ9N57MV?hl=en-us&amp;gl=US" target="_blank" rel="noopener noreferrer">glTF Shell Extension for Windows</a> का उपयोग करें</li><li>स्थानीय रूप से सत्यापन त्रुटियों और इन-इंजन पूर्वावलोकन देखने के लिए <a href="https://marketplace.visualstudio.com/items?itemName=cesium.gltf-vscode" target="_blank" rel="noopener noreferrer">glTF Tools VS Code Extension</a> का उपयोग करें</li></ul><h2 id="built-in-url-parameters" tabindex="-1"><a class="header-anchor" href="#built-in-url-parameters"><span>Built-in URL parameters</span></a></h2><p>Debug Flags को URL query parameters के रूप में जोड़ा जा सकता है। उपलब्ध सभी parameters की सूची प्राप्त करने के लिए <code>?help</code> का उपयोग करें।</p><p>यहां कुछ सबसे अधिक उपयोग किए जाने वाले parameters दिए गए हैं:</p><ul><li><code>help</code> कंसोल में सभी उपलब्ध url parameter प्रिंट करें</li><li><code>console</code> ऑन-स्क्रीन dev कंसोल खोलता है, जो मोबाइल डिबगिंग के लिए उपयोगी है</li><li><code>printGltf</code> लोडेड gltf फाइलों को कंसोल में लॉग करता है</li><li><code>stats</code> FPS मॉड्यूल दिखाता है और हर कुछ सेकंड में threejs renderer stats लॉग करता है</li><li><code>showcolliders</code> physics colliders का विज़ुअलाइज़ेशन करता है</li><li><code>gizmos</code> gizmo रेंडरिंग सक्षम करता है (उदाहरण के लिए जब BoxCollider या AxesHelper कंपोनेंट का उपयोग किया जाता है)</li><li>और भी बहुत कुछ: उन सभी को देखने के लिए कृपया <code>help</code> का उपयोग करें</li></ul><h2 id="debug-methods" tabindex="-1"><a class="header-anchor" href="#debug-methods"><span>Debug Methods</span></a></h2>',10)),a("p",null,[e[1]||(e[1]=i("Needle Engine में कुछ बहुत शक्तिशाली और उपयोगी डिबगिंग मेथड भी हैं जो स्टैटिक ")),e[2]||(e[2]=a("code",null,"Gizmos",-1)),e[3]||(e[3]=i(" क्लास का हिस्सा हैं। अधिक जानकारी के लिए ")),o(l,{to:"/lang/hi/scripting.html#gizmos"},{default:h(()=>e[0]||(e[0]=[i("scripting documentation")])),_:1}),e[4]||(e[4]=i(" देखें।"))]),e[6]||(e[6]=s(`<h2 id="local-testing-of-release-builds" tabindex="-1"><a class="header-anchor" href="#local-testing-of-release-builds"><span>Local Testing of release builds</span></a></h2><ul><li>सबसे पहले, http-server इंस्टॉल करें: <code>npm install -g http-server</code></li><li>एक बिल्ड बनाएं (development या production)</li><li>कमांडलाइन टूल के साथ <em>dist</em> निर्देशिका खोलें</li><li><code>http-server -g</code> चलाएँ | <em><code>-g</code> gzip सपोर्ट सक्षम करता है</em></li><li>वैकल्पिक: यदि आप WebXR का परीक्षण करना चाहते हैं, तो एक <a href="https://stackoverflow.com/a/35231213" target="_blank" rel="noopener noreferrer">self-signed SSL certificate</a> जेनरेट करें, फिर https (WebXR के लिए आवश्यक) सक्षम करने के लिए <code>http-server -g -S</code> चलाएँ।</li></ul><h2 id="vscode" tabindex="-1"><a class="header-anchor" href="#vscode"><span>VSCode</span></a></h2><p>आप ब्रेकप्वाइंट सेट करने और अपने कोड को डीबग करने के लिए VSCode को चल रहे स्थानीय सर्वर से अटैच कर सकते हैं। आप यहां <a href="https://code.visualstudio.com/docs/editor/debugging" target="_blank" rel="noopener noreferrer">debugging with VSCode</a> के बारे में अधिक पढ़ सकते हैं।</p><p>अपनी वेब प्रोजेक्ट में <code>.vscode/launch.json</code> पर निम्नलिखित सामग्री के साथ एक launch.json फ़ाइल बनाएँ:</p><div class="language-json" data-highlighter="shiki" data-ext="json" style="--shiki-light:#4c4f69;--shiki-dark:#c6d0f5;--shiki-light-bg:#eff1f5;--shiki-dark-bg:#303446;"><pre class="shiki shiki-themes catppuccin-latte catppuccin-frappe vp-code"><code><span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">{</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">    &quot;</span><span style="--shiki-light:#1E66F5;--shiki-dark:#8CAAEE;">version</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">&quot;</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">:</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6D189;"> &quot;0.2.0&quot;</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">,</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">    &quot;</span><span style="--shiki-light:#1E66F5;--shiki-dark:#8CAAEE;">configurations</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">&quot;</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">:</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;"> [</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">        {</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">            &quot;</span><span style="--shiki-light:#1E66F5;--shiki-dark:#8CAAEE;">type</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">&quot;</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">:</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6D189;"> &quot;chrome&quot;</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">,</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">            &quot;</span><span style="--shiki-light:#1E66F5;--shiki-dark:#8CAAEE;">request</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">&quot;</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">:</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6D189;"> &quot;launch&quot;</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">,</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">            &quot;</span><span style="--shiki-light:#1E66F5;--shiki-dark:#8CAAEE;">name</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">&quot;</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">:</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6D189;"> &quot;Attach Chrome&quot;</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">,</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">            &quot;</span><span style="--shiki-light:#1E66F5;--shiki-dark:#8CAAEE;">url</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">&quot;</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">:</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6D189;"> &quot;https://localhost:3000&quot;</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">,</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">            &quot;</span><span style="--shiki-light:#1E66F5;--shiki-dark:#8CAAEE;">webRoot</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">&quot;</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">:</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6D189;"> &quot;\${workspaceFolder}&quot;</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">        }</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">    ]</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">}</span></span></code></pre></div><p>यदि आपने उस पोर्ट को बदल दिया है जिस पर आपका सर्वर शुरू होता है, तो <code>url</code> फ़ील्ड को तदनुसार अपडेट करना सुनिश्चित करें। आप VSCode के भीतर से अपना स्थानीय सर्वर शुरू कर सकते हैं:</p><p><img src="`+t+'" alt=""></p><h2 id="mobile" tabindex="-1"><a class="header-anchor" href="#mobile"><span>Mobile</span></a></h2><h3 id="android-debugging" tabindex="-1"><a class="header-anchor" href="#android-debugging"><span>Android Debugging</span></a></h3><p><strong>Android</strong> डिबगिंग के लिए, आप Chrome Dev Tools को अपने डिवाइस से अटैच कर सकते हैं और अपने PC से सीधे लॉग देख सकते हैं। आपको अपने डिवाइस को डेवलपमेंट मोड में स्विच करना होगा और इसे USB के माध्यम से कनेक्ट करना होगा।</p><p>आधिकारिक Chrome डॉक्यूमेंटेशन <a href="https://developer.chrome.com/docs/devtools/remote-debugging/" target="_blank" rel="noopener noreferrer">यहां</a> देखें</p><ul><li>सुनिश्चित करें कि आपके फोन पर <a href="https://developer.android.com/studio/debug/dev-options" target="_blank" rel="noopener noreferrer">Developer Mode</a> सक्षम है</li><li>अपने फोन को USB के माध्यम से अपने कंप्यूटर से कनेक्ट करें</li><li>अपने ब्राउज़र में इस URL को खोलें <code>chrome://inspect/#devices</code></li><li>अपने मोबाइल डिवाइस पर अपने कंप्यूटर से USB कनेक्शन की अनुमति दें</li><li>कुछ देर बाद Chrome में आपके कंप्यूटर पर खुली हुई टैब की सूची दिखाई देनी चाहिए (<code>chrome://inspect/#devices</code> पर)</li><li>जिस टैब को आप डीबग करना चाहते हैं, उस पर <code>Inspect</code> क्लिक करें</li></ul><h3 id="ios-debugging" tabindex="-1"><a class="header-anchor" href="#ios-debugging"><span>iOS Debugging</span></a></h3><p>आसान iOS डिबगिंग के लिए उपयोगी ऑन-स्क्रीन JavaScript कंसोल प्राप्त करने के लिए <code>?console</code> URL parameter जोड़ें।</p><p>यदि आपके पास Mac है, तो आप Safari से भी अटैच कर सकते हैं (ऊपर Android वर्कफ़्लो के समान)।</p><p>iOS पर WebXR के उपयोग और डिबगिंग के लिए एक तृतीय-पक्ष ब्राउज़र का उपयोग करना आवश्यक है: <a href="https://labs.mozilla.org/projects/webxr-viewer/" target="_blank" rel="noopener noreferrer">Mozilla WebXR Viewer</a>।</p><h3 id="quest-debugging" tabindex="-1"><a class="header-anchor" href="#quest-debugging"><span>Quest Debugging</span></a></h3><p>Quest सिर्फ एक Android डिवाइस है - चरणों के लिए <a href="#android-debugging">Android Debugging</a> अनुभाग देखें।</p><p>पेज स्वचालित रूप से AI का उपयोग करके अनुवादित।</p>',20))])}const m=n(g,[["render",k]]),f=JSON.parse('{"path":"/lang/hi/debugging.html","title":"How To Debug","lang":"hi-IN","frontmatter":{"title":"How To Debug","head":[["meta",{"name":"og:image","content":"https://engine.needle.tools/docs/.preview/how to debug_hi.png"}],["meta",{"name":"og:description","content":"---\\nglTF या glb फाइलों को ऑनलाइन जांचने के लिए:"}]],"description":"---\\nglTF या glb फाइलों को ऑनलाइन जांचने के लिए:"},"headers":[{"level":2,"title":"Useful resources for working with glTF","slug":"useful-resources-for-working-with-gltf","link":"#useful-resources-for-working-with-gltf","children":[]},{"level":2,"title":"Built-in URL parameters","slug":"built-in-url-parameters","link":"#built-in-url-parameters","children":[]},{"level":2,"title":"Debug Methods","slug":"debug-methods","link":"#debug-methods","children":[]},{"level":2,"title":"Local Testing of release builds","slug":"local-testing-of-release-builds","link":"#local-testing-of-release-builds","children":[]},{"level":2,"title":"VSCode","slug":"vscode","link":"#vscode","children":[]},{"level":2,"title":"Mobile","slug":"mobile","link":"#mobile","children":[{"level":3,"title":"Android Debugging","slug":"android-debugging","link":"#android-debugging","children":[]},{"level":3,"title":"iOS Debugging","slug":"ios-debugging","link":"#ios-debugging","children":[]},{"level":3,"title":"Quest Debugging","slug":"quest-debugging","link":"#quest-debugging","children":[]}]}],"git":{"updatedTime":1745319699000,"contributors":[{"name":"Marcel Wiessler","username":"","email":"marcel@gaisterhand.de","commits":1}],"changelog":[{"hash":"833ce0af31c32254139592f63afbfed4fac50b2a","time":1745319699000,"email":"marcel@gaisterhand.de","author":"Marcel Wiessler","message":"Language: add FR and HI"}]},"filePathRelative":"lang/hi/debugging.md"}');export{m as comp,f as data};
