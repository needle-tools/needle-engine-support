import{_ as i,c as n,e as t,a as r,d as s,b as l,w as o,r as p,o as c}from"./app-9T6lAodh.js";const u={};function d(h,e){const a=p("RouteLink");return c(),n("div",null,[e[3]||(e[3]=t('<h1 id="exporter-des-assets-des-animations-des-prefabs-des-mat-riaux-des-lightmaps..." tabindex="-1"><a class="header-anchor" href="#exporter-des-assets-des-animations-des-prefabs-des-mat-riaux-des-lightmaps..."><span>Exporter des Assets, des Animations, des Prefabs, des Mat√©riaux, des Lightmaps...</span></a></h1><p>Ajoutez un composant <code>ExportInfo</code> √† votre sc√®ne Unity pour g√©n√©rer un nouveau projet web √† partir d&#39;un mod√®le, lier un projet web existant vers lequel vous souhaitez exporter, configurer les d√©pendances √† d&#39;autres biblioth√®ques et packages, et d√©ployer votre projet.</p><p>Par d√©faut, votre sc√®ne est export√©e lors de la sauvegarde. Ce r√©glage peut √™tre modifi√© en d√©sactivant <code>Auto Export</code> dans le composant <code>ExportInfo</code>.</p><h2 id="exporter-des-fichiers-gltf" tabindex="-1"><a class="header-anchor" href="#exporter-des-fichiers-gltf"><span>üì¶ Exporter des fichiers glTF</span></a></h2><p>Pour exporter des meshes, des mat√©riaux, des animations, des textures (...) cr√©ez un nouveau GameObject dans votre hi√©rarchie et ajoutez-y un composant <code>GltfObject</code>. C&#39;est la racine d&#39;un nouveau fichier glTF. Il sera export√© chaque fois que vous apportez une modification √† la sc√®ne et la sauvegardez.</p><p>Seuls les scripts et les donn√©es sur et dans ces objets racines sont export√©s. Les scripts et les donn√©es en dehors d&#39;eux ne sont pas export√©s.</p><p>Ajoutez un cube comme enfant de votre objet racine et sauvegardez votre sc√®ne. Notez que le dossier de sortie <code>assets/</code> (voir <a href="#vite-project-structure">structure du projet</a>) contient maintenant un nouveau fichier <code>.glb</code> portant le m√™me nom que votre GameObject racine.</p><p>Vous pouvez activer le r√©glage <code>Smart Export</code> (via <code>Edit/Project Settings/Needle</code>) pour n&#39;exporter que lorsqu&#39;une modification est d√©tect√©e dans la hi√©rarchie de cet objet.</p><details class="hint-container details"><summary>Comment emp√™cher l&#39;exportation d&#39;objets sp√©cifiques</summary><p>Les objets avec le tag <code>EditorOnly</code> seront ignor√©s lors de l&#39;export, y compris leur hi√©rarchie enfant. Sachez que cela est pr√©f√©rable √† la d√©sactivation des objets, car les objets d√©sactiv√©s seront toujours export√©s au cas o√π ils seraient r√©activ√©s plus tard.</p></details><h3 id="chargement-paresseux-et-multiples-niveaux-sc-nes" tabindex="-1"><a class="header-anchor" href="#chargement-paresseux-et-multiples-niveaux-sc-nes"><span>Chargement paresseux et multiples niveaux / sc√®nes</span></a></h3><p>Si vous souhaitez diviser votre application en plusieurs niveaux ou sc√®nes, vous pouvez simplement utiliser le composant <code>SceneSwitcher</code>. Vous pouvez ensuite structurer votre application en plusieurs sc√®nes ou prefabs et les ajouter au tableau SceneSwitcher pour qu&#39;ils soient charg√©s et d√©charg√©s √† l&#39;ex√©cution. C&#39;est un excellent moyen d&#39;√©viter de devoir charger tout votre contenu au d√©part et de r√©duire les temps de chargement (par exemple, c&#39;est ce que nous avons fait sur <a href="https://needle.tools?utm_source=needle_docs&amp;utm_content=export_scenes" target="_blank" rel="noopener noreferrer">needle.tools</a> en s√©parant chaque section de votre site web en sa propre sc√®ne et en ne les chargeant que lorsque n√©cessaire).</p><h3 id="complexit-recommand-e-par-gltf" tabindex="-1"><a class="header-anchor" href="#complexit-recommand-e-par-gltf"><span>Complexit√© recommand√©e par glTF</span></a></h3><ul><li>Taille d&#39;exportation maximale de 50 Mo non compress√©e (se retrouve g√©n√©ralement autour de ~10-20 Mo compress√©e)</li><li>Maximum 500k vertices (moins si vous ciblez √©galement la VR mobile)</li><li>Maximum 4x lightmaps 2k</li></ul>',13)),r("p",null,[e[1]||(e[1]=s("Vous pouvez diviser les sc√®nes et les prefabs en plusieurs fichiers glTF, puis les charger √† la demande (uniquement lorsque n√©cessaire). Cela permet de maintenir les performances de chargement rapides et la taille des fichiers petite. Voir la ")),l(a,{to:"/lang/fr/scripting.html#assetreference-and-addressables"},{default:o(()=>e[0]||(e[0]=[s("section AssetReference dans les documents de Scripting")])),_:1}),e[2]||(e[2]=s("."))]),e[4]||(e[4]=t(`<p>La complexit√© de la sc√®ne ici est recommand√©e pour assurer de bonnes performances sur une gamme d&#39;appareils web capables et de largeurs de bande passante. Il n&#39;y a pas de limitation technique au-del√† des capacit√©s de votre appareil.</p><h3 id="prefabs" tabindex="-1"><a class="header-anchor" href="#prefabs"><span>Prefabs</span></a></h3><p>Les prefabs peuvent √™tre export√©s en tant que fichiers glTF individuels et instanci√©s √† l&#39;ex√©cution. Pour exporter un prefab en glTF, il suffit de r√©f√©rencer un asset prefab (depuis le navigateur de projet et non dans la sc√®ne) <a href="https://fwd.needle.tools/needle-engine/docs/addressables" target="_blank" rel="noopener noreferrer">depuis un de vos scripts</a>.</p><p>L&#39;exportation de Prefabs fonctionne √©galement avec l&#39;imbrication : un composant dans un Prefab peut r√©f√©rencer un autre Prefab qui sera alors √©galement export√©. Ce m√©canisme permet de composer des sc√®nes aussi l√©g√®res que possible et de charger le contenu le plus important en premier, puis de diff√©rer le chargement du contenu additionnel.</p><h3 id="scene-assets" tabindex="-1"><a class="header-anchor" href="#scene-assets"><span>Scene Assets</span></a></h3><p>De mani√®re similaire aux assets Prefab, vous pouvez r√©f√©rencer d&#39;autres assets Scene. Pour commencer, cr√©ez un composant dans Unity avec un champ <code>UnityEditor.SceneAsset</code> et ajoutez-le √† l&#39;un de vos GameObjects √† l&#39;int√©rieur d&#39;un GltfObject. La sc√®ne r√©f√©renc√©e sera d√©sormais export√©e en tant que fichier glTF s√©par√© et pourra √™tre charg√©e/d√©s√©rialis√©e en tant que <code>AssetReference</code> depuis TypeScript.</p><p>Vous pouvez continuer √† travailler dans une sc√®ne r√©f√©renc√©e tout en mettant √† jour votre sc√®ne d&#39;exportation/site web principale. Lors de la sauvegarde de la sc√®ne ou du changement de mode de jeu, nous d√©tecterons si la sc√®ne actuelle est utilis√©e par votre serveur actuellement en cours d&#39;ex√©cution et d√©clencherons alors une nouvelle exportation pour ce seul glb. (Cette v√©rification se fait par nom - si un glb dans votre dossier <code>&lt;web_project&gt;/assets/</code> existe, il est r√©export√© et la sc√®ne principale le recharge).</p><p>Par exemple, sur <a href="https://needle.tools?utm_source=needle_docs&amp;utm_content=export_sceneassets" target="_blank" rel="noopener noreferrer">notre site web</a>, chaque section est configur√©e comme une sc√®ne distincte et lors de l&#39;exportation, elles sont empaquet√©es dans plusieurs fichiers glb que nous chargeons √† la demande :</p><p><img src="https://user-images.githubusercontent.com/5083203/185958983-71913c97-5eec-4cfd-99f5-76798582373e.png" alt="2022-08-22-172605_Needle_Website_-Website-_Windows,_Mac,Linux-_U"></p><h4 id="charger-un-prefab-ou-une-sc-ne-depuis-un-script-personnalis" tabindex="-1"><a class="header-anchor" href="#charger-un-prefab-ou-une-sc-ne-depuis-un-script-personnalis"><span>Charger un Prefab ou une Sc√®ne depuis un script personnalis√©</span></a></h4><p>Si vous souhaitez r√©f√©rencer et charger un prefab depuis un de vos scripts, vous pouvez d√©clarer un type <code>AssetReference</code>. Voici un exemple minimal :</p><div class="language-ts" data-highlighter="shiki" data-ext="ts" style="--shiki-light:#4c4f69;--shiki-dark:#c6d0f5;--shiki-light-bg:#eff1f5;--shiki-dark-bg:#303446;"><pre class="shiki shiki-themes catppuccin-latte catppuccin-frappe vp-code"><code><span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CA9EE6;">import</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;"> {</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;"> Behaviour</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">,</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;"> serializable</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">,</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;"> AssetReference </span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">}</span><span style="--shiki-light:#8839EF;--shiki-dark:#CA9EE6;"> from</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6D189;"> &quot;@needle-tools/engine&quot;</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CA9EE6;">export</span><span style="--shiki-light:#8839EF;--shiki-dark:#CA9EE6;"> class</span><span style="--shiki-light:#DF8E1D;--shiki-light-font-style:italic;--shiki-dark:#E5C890;--shiki-dark-font-style:italic;"> MyClass</span><span style="--shiki-light:#8839EF;--shiki-dark:#CA9EE6;"> extends</span><span style="--shiki-light:#DF8E1D;--shiki-light-font-style:italic;--shiki-dark:#E5C890;--shiki-dark-font-style:italic;"> Behaviour</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-light-font-style:italic;--shiki-dark:#949CBB;--shiki-dark-font-style:italic;">    // if you export a prefab or scene as a reference from Unity you&#39;ll get a path to that asset</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-light-font-style:italic;--shiki-dark:#949CBB;--shiki-dark-font-style:italic;">    // which you can de-serialize to AssetReference for convenient loading</span></span>
<span class="line"><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#8CAAEE;--shiki-dark-font-style:italic;">    @serializable</span><span style="--shiki-light:#FE640B;--shiki-dark:#EF9F76;">(</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">AssetReference</span><span style="--shiki-light:#FE640B;--shiki-dark:#EF9F76;">)</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">    myPrefab</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">?:</span><span style="--shiki-light:#DF8E1D;--shiki-light-font-style:italic;--shiki-dark:#E5C890;--shiki-dark-font-style:italic;"> AssetReference</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">;</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">    </span></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CA9EE6;">    async</span><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#8CAAEE;--shiki-dark-font-style:italic;"> start</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">()</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;"> {</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-light-font-style:italic;--shiki-dark:#949CBB;--shiki-dark-font-style:italic;">      // directly instantiate</span></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CA9EE6;">      const</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;"> myInstance </span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">=</span><span style="--shiki-light:#8839EF;--shiki-dark:#CA9EE6;"> await</span><span style="--shiki-light:#D20F39;--shiki-dark:#E78284;"> this</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">.</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">myPrefab</span><span style="--shiki-light:#179299;--shiki-dark:#81C8BE;">?.</span><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#8CAAEE;--shiki-dark-font-style:italic;">instantiate</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">()</span><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-light-font-style:italic;--shiki-dark:#949CBB;--shiki-dark-font-style:italic;">      // you can also just load and instantiate later</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-light-font-style:italic;--shiki-dark:#949CBB;--shiki-dark-font-style:italic;">      // const myInstance = await this.myPrefab.loadAssetAsync();</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-light-font-style:italic;--shiki-dark:#949CBB;--shiki-dark-font-style:italic;">      // this.gameObject.add(myInstance)</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-light-font-style:italic;--shiki-dark:#949CBB;--shiki-dark-font-style:italic;">      // this is useful if you know that you want to load this asset only once because it will not create a copy</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-light-font-style:italic;--shiki-dark:#949CBB;--shiki-dark-font-style:italic;">      // since \`\`instantiate()\`\` does create a copy of the asset after loading it</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">    }</span><span style="--shiki-light:#4C4F69;--shiki-dark:#C6D0F5;">  </span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#949CBB;">}</span></span></code></pre></div><h2 id="exporter-des-animations" tabindex="-1"><a class="header-anchor" href="#exporter-des-animations"><span>üèá Exporter des Animations</span></a></h2><p>Needle Engine prend en charge un sous-ensemble consid√©rable et puissant des fonctionnalit√©s d&#39;animation d&#39;Unity :</p><ul><li><strong>Timeline</strong> incl. pistes d&#39;activation, pistes d&#39;animation, d√©calages de pistes</li><li><strong>Animator</strong> incl. transitions d&#39;√©tat de haut niveau <ul><li>Les blend trees ne sont pas pris en charge actuellement.</li><li>Les sous-machines d&#39;√©tat ne sont pas prises en charge actuellement.</li></ul></li><li><strong>AnimationClips</strong> incl. modes de boucle</li><li><strong>Animations proc√©durales</strong> peuvent √™tre cr√©√©es via scripting</li></ul><p>Needle Engine est l&#39;un des premiers √† supporter la nouvelle <a href="https://github.com/ux3d/glTF/tree/extensions/KHR_animation_pointer/extensions/2.0/Khronos/KHR_animation_pointer" target="_blank" rel="noopener noreferrer">extension glTF KHR_ANIMATION_POINTER</a>. Cela signifie que presque toutes les propri√©t√©s, y compris les variables de script, sont animables.</p><p>Une limitation actuelle est que les mat√©riaux ne seront pas dupliqu√©s √† l&#39;exportation ‚Äî si vous souhaitez animer le m√™me mat√©riau avec des couleurs diff√©rentes, par exemple, vous devez actuellement diviser le mat√©riau en deux.</p><h2 id="exporter-le-skybox" tabindex="-1"><a class="header-anchor" href="#exporter-le-skybox"><span>üåç Exporter le Skybox</span></a></h2><p>Le skybox Unity et la r√©flexion personnalis√©e (le cas √©ch√©ant) sont cuits dans une texture lors de l&#39;exportation et export√©s automatiquement √† l&#39;int√©rieur de l&#39;extension <code>NEEDLE_lightmaps</code>.</p><p>Pour changer la r√©solution du skybox, vous pouvez ajouter un composant <code>SkyboxExportSettings</code> √† votre sc√®ne.</p><p><img src="https://user-images.githubusercontent.com/5083203/196030839-170a9496-9ed9-4ebc-bc1d-2df6c746f8c8.png" alt="image"></p><p>Si vous ne souhaitez pas que le skybox soit export√© du tout dans un fichier glb, vous pouvez d√©cocher l&#39;option <code>Embed Skybox</code> sur votre composant <code>GltfObject</code>.</p><p><img src="https://user-images.githubusercontent.com/5083203/196030825-8a05037f-5acc-4795-9128-2bdacedd0d49.png" alt="image"></p><h2 id="exporter-les-mat-riaux" tabindex="-1"><a class="header-anchor" href="#exporter-les-mat-riaux"><span>‚ú® Exporter les Mat√©riaux</span></a></h2><h3 id="mat-riaux-bas-s-sur-la-physique-pbr" tabindex="-1"><a class="header-anchor" href="#mat-riaux-bas-s-sur-la-physique-pbr"><span>Mat√©riaux Bas√©s sur la Physique (PBR)</span></a></h3><p>Par d√©faut, les mat√©riaux sont convertis en mat√©riaux glTF lors de l&#39;exportation. glTF prend en charge un mod√®le de mat√©riau bas√© sur la physique et dispose d&#39;un certain nombre d&#39;extensions qui aident √† repr√©senter des mat√©riaux complexes.</p><p>Pour un contr√¥le total sur ce qui est export√©, il est fortement recommand√© d&#39;utiliser les mat√©riaux glTF fournis par UnityGltf :</p><ul><li>PBRGraph</li><li>UnlitGraph</li></ul><div class="hint-container tip"><p class="hint-container-title">En cas de doute, utilisez le shader PBRGraph</p><p>Le mat√©riau PBRGraph poss√®de de nombreuses fonctionnalit√©s, bien plus que Standard ou URP/Lit. Celles-ci incluent des fonctionnalit√©s avanc√©es comme la r√©fraction, l&#39;iridescence, le sheen, et plus encore. De plus, les mat√©riaux utilisant PBRGraph et UnlitGraph sont export√©s tels quels, sans conversion n√©cessaire.</p></div><p>Mat√©riaux pouvant √™tre convertis directement :</p><ul><li>BiRP/Standard</li><li>BiRP/Autodesk Interactive</li><li>BiRP/Unlit</li><li>URP/Lit</li><li>URP/Unlit</li></ul><p>Les autres mat√©riaux sont convertis en utilisant une heuristique bas√©e sur le nom des propri√©t√©s. Cela signifie qu&#39;en fonction des noms de propri√©t√©s utilis√©s par vos mat√©riaux et shaders personnalis√©s, vous pourriez vouloir soit refactoriser les propri√©t√©s de votre shader personnalis√© pour utiliser les noms de propri√©t√©s de URP/Lit ou PBRGraph, soit exporter le mat√©riau en tant que <a href="#custom-shaders">Shader personnalis√©</a>.</p><h3 id="shaders-personnalis-s" tabindex="-1"><a class="header-anchor" href="#shaders-personnalis-s"><span>Shaders personnalis√©s</span></a></h3><p>Pour exporter des shaders unlit personnalis√©s (par exemple cr√©√©s avec ShaderGraph), ajoutez une √©tiquette d&#39;asset <code>ExportShader</code> au shader que vous souhaitez exporter. Les √©tiquettes d&#39;asset sont visibles en bas de la fen√™tre de l&#39;inspecteur.</p><p><img src="https://user-images.githubusercontent.com/5083203/185957781-9fae18c5-09ff-490f-8958-57e138aa0003.png" alt="2022-08-22-172029_Needle_Website_-CustomShaders-_Windows,_Mac,_Lin"></p><h4 id="limitations" tabindex="-1"><a class="header-anchor" href="#limitations"><span>Limitations</span></a></h4><ul><li>Nous ne supportons actuellement que les shaders <strong>Unlit</strong> personnalis√©s ‚Äî la conversion des shaders Lit n&#39;est pas officiellement prise en charge.</li><li>Les shaders Lit personnalis√©s sont actuellement exp√©rimentaux. Tous les modes de rendu ne sont pas pris en charge.</li><li>La r√©ception d&#39;ombres sur les shaders personnalis√©s n&#39;est pas prise en charge.</li><li>Les skinned meshes avec des shaders personnalis√©s ne sont pas pris en charge.</li><li>Comme il y a de multiples changements de syst√®mes de coordonn√©es en passant d&#39;Unity √† three.js et glTF, des ajustements peuvent √™tre n√©cessaires pour que les effets avanc√©s fonctionnent. Nous essayons de convertir les donn√©es √† l&#39;exportation, mais il est possible que nous ne couvrions pas tous les cas o√π des conversions sont n√©cessaires. <ul><li>Les coordonn√©es UV dans Unity commencent en bas √† gauche; dans glTF, elles commencent en haut √† gauche.</li><li>Les valeurs de l&#39;axe X sont invers√©es dans glTF par rapport √† Unity. C&#39;est une variante d&#39;un changement de syst√®me de coordonn√©es de gaucher √† droitier. Les donn√©es utilis√©es dans les shaders peuvent devoir √™tre invers√©es sur X pour s&#39;afficher correctement.</li></ul></li></ul><div class="hint-container note"><p class="hint-container-title">Ne fait pas partie de la sp√©cification glTF</p><p>Notez que les <strong>Shaders personnalis√©s</strong> ne font pas officiellement partie de la sp√©cification glTF. Notre impl√©mentation des shaders personnalis√©s utilise une extension appel√©e KHR_techniques_webgl, qui stocke le code shader WebGL directement dans le fichier glTF. Les assets r√©sultants fonctionneront dans les visualiseurs bas√©s sur Needle Engine, mais pourraient ne pas s&#39;afficher correctement dans d&#39;autres visualiseurs.</p></div><h2 id="exporter-les-lightmaps" tabindex="-1"><a class="header-anchor" href="#exporter-les-lightmaps"><span>üí° Exporter les Lightmaps</span></a></h2><p><img src="https://user-images.githubusercontent.com/5083203/185957005-d04c9530-07eb-40f5-b305-9822d13b79ab.png" alt="2022-08-22-171650_Needle_-_Google_Chrome"></p><p>Pour exporter les lightmaps, il suffit de <a href="https://docs.unity3d.com/Manual/Lightmapping.html" target="_blank" rel="noopener noreferrer">g√©n√©rer des lightmaps</a> dans Unity. Les lightmaps seront export√©es automatiquement.</p><p>Lorsque vous travaillez sur plusieurs sc√®nes, d√©sactivez &quot;Auto Generate&quot; et cousez les lightmaps explicitement. Sinon, Unity supprimera les lightmaps temporaires lors du changement de sc√®ne.</p><h3 id="param-tres-lightmap-recommand-s" tabindex="-1"><a class="header-anchor" href="#param-tres-lightmap-recommand-s"><span>Param√®tres Lightmap recommand√©s</span></a></h3><ul><li>Encodage des Lightmaps : Normal Quality (ajuster dans Project Settings &gt; Player)</li><li>Progressive GPU (plus rapide et g√©n√©ralement assez pr√©cis pour les petites sc√®nes)</li><li>Lightmaps Non-Directionnelles</li><li>Taille Lightmap max 2k (vous pouvez aller plus haut, mais attendez-vous √† des fichiers volumineux)</li><li>Max 4x lightmaps 2k par sc√®ne (vous pouvez aller plus haut, mais attendez-vous √† des fichiers volumineux)</li><li>Compress Lightmaps OFF (augmente la qualit√© ; sinon, elles seront compress√©es √† nouveau lors de l&#39;exportation)</li></ul><p><img src="https://user-images.githubusercontent.com/5083203/185956392-f4031f45-ad13-4e6d-a14c-c8ec5c1fcfd4.png" alt="2022-08-22-171356_Needle_Website_-Lightmaps-_Windows,_Mac,Linux-"></p><h3 id="m-langer-les-objets-cuits-et-non-cuits" tabindex="-1"><a class="header-anchor" href="#m-langer-les-objets-cuits-et-non-cuits"><span>M√©langer les objets cuits et non cuits</span></a></h3><p>Il n&#39;y a pas de correspondance parfaite entre la fa√ßon dont Unity g√®re les lumi√®res et l&#39;environnement et la fa√ßon dont three.js les g√®re. Par exemple, Unity a des chemins de code enti√®rement distincts pour les objets lightmapp√©s et non lightmapp√©s (les objets lightmapp√©s ne re√ßoivent pas de lumi√®re ambiante car celle-ci est d√©j√† cuite dans leurs cartes), et three.js ne fait pas cette distinction.</p><p>Cela signifie que pour obtenir les meilleurs r√©sultats, nous recommandons actuellement des param√®tres sp√©cifiques si vous m√©langez des objets cuits et non cuits dans une sc√®ne :</p><div class="language-" data-highlighter="shiki" data-ext="" style="--shiki-light:#4c4f69;--shiki-dark:#c6d0f5;--shiki-light-bg:#eff1f5;--shiki-dark-bg:#303446;"><pre class="shiki shiki-themes catppuccin-latte catppuccin-frappe vp-code"><code><span class="line"><span>Environment Lighting: Skybox</span></span>
<span class="line"><span>Ambient Intensity: 1</span></span>
<span class="line"><span>Ambient Color: black</span></span></code></pre></div><p><strong>2021.3+</strong><img src="https://user-images.githubusercontent.com/2693840/186947184-2446672f-420c-47e8-8f7d-970a7d52bf35.png" alt="20220826-175324-SqBL-Unity_pMXa-needle"></p><p><strong>2020.3+</strong><img src="https://user-images.githubusercontent.com/2693840/186947203-2d7d96c3-f566-44b4-889c-4103fac505d4.png" alt="20220826-175514-tnGc-Unity_mycs-needle"></p><p>Si vous n&#39;avez aucun objet cuit dans votre sc√®ne, les param√®tres suivants devraient √©galement donner des r√©sultats corrects :</p><div class="language-" data-highlighter="shiki" data-ext="" style="--shiki-light:#4c4f69;--shiki-dark:#c6d0f5;--shiki-light-bg:#eff1f5;--shiki-dark-bg:#303446;"><pre class="shiki shiki-themes catppuccin-latte catppuccin-frappe vp-code"><code><span class="line"><span>Environment Lighting: Color</span></span>
<span class="line"><span>Ambient Color: any</span></span></code></pre></div><hr><p>Page automatiquement traduite utilisant l&#39;IA</p>`,55))])}const g=i(u,[["render",d]]),f=JSON.parse(`{"path":"/lang/fr/export.html","title":"Exporter des Assets vers glTF","lang":"fr-FR","frontmatter":{"title":"Exporter des Assets vers glTF","head":[["meta",{"name":"og:image","content":"https://engine.needle.tools/docs/.preview/exporter des assets vers gltf_fr.png"}],["meta",{"name":"og:description","content":"---\\nAjoutez un composant ExportInfo √† votre sc√®ne Unity pour g√©n√©rer un nouveau projet web √† partir d'un mod√®le, lier un projet web existant vers lequel vous souhaitez exporter, configurer les d√©pendances √† d'autres biblioth√®ques et packages, et d√©ployer votre projet.\\nPar d√©faut, votre sc√®ne est export√©e lors de la sauvegarde. Ce r√©glage peut √™tre modifi√© en d√©sactivant Auto Export dans le composant ExportInfo.\\nPour exporter des meshes, des mat√©riaux, des animations, des textures (...) cr√©ez un nouveau GameObject dans votre hi√©rarchie et ajoutez-y un composant GltfObject. C'est la racine d'un nouveau fichier glTF. Il sera export√© chaque fois que vous apportez une modification √† la sc√®ne et la sauvegardez.\\nSeuls les scripts et les donn√©es sur et dans ces objets racines sont export√©s. Les scripts et les donn√©es en dehors d'eux ne sont pas export√©s.\\nAjoutez un cube comme enfant de votre objet racine et sauvegardez votre sc√®ne. Notez que le dossier de sortie assets/ (voir structure du projet) contient maintenant un nouveau fichier .glb portant le m√™me nom que votre GameObject racine.\\nVous pouvez activer le r√©glage Smart Export (via Edit/Project Settings/Needle) pour n'exporter que lorsqu'une modification est d√©tect√©e dans la hi√©rarchie de cet objet.\\n:::details Comment emp√™cher l'exportation d'objets sp√©cifiques\\nLes objets avec le tag EditorOnly seront ignor√©s lors de l'export, y compris leur hi√©rarchie enfant.\\nSachez que cela est pr√©f√©rable √† la d√©sactivation des objets, car les objets d√©sactiv√©s seront toujours export√©s au cas o√π ils seraient r√©activ√©s plus tard.\\n:::\\nSi vous souhaitez diviser votre application en plusieurs niveaux ou sc√®nes, vous pouvez simplement utiliser le composant Scen"}]],"description":"---\\nAjoutez un composant ExportInfo √† votre sc√®ne Unity pour g√©n√©rer un nouveau projet web √† partir d'un mod√®le, lier un projet web existant vers lequel vous souhaitez exporter, configurer les d√©pendances √† d'autres biblioth√®ques et packages, et d√©ployer votre projet.\\nPar d√©faut, votre sc√®ne est export√©e lors de la sauvegarde. Ce r√©glage peut √™tre modifi√© en d√©sactivant Auto Export dans le composant ExportInfo.\\nPour exporter des meshes, des mat√©riaux, des animations, des textures (...) cr√©ez un nouveau GameObject dans votre hi√©rarchie et ajoutez-y un composant GltfObject. C'est la racine d'un nouveau fichier glTF. Il sera export√© chaque fois que vous apportez une modification √† la sc√®ne et la sauvegardez.\\nSeuls les scripts et les donn√©es sur et dans ces objets racines sont export√©s. Les scripts et les donn√©es en dehors d'eux ne sont pas export√©s.\\nAjoutez un cube comme enfant de votre objet racine et sauvegardez votre sc√®ne. Notez que le dossier de sortie assets/ (voir structure du projet) contient maintenant un nouveau fichier .glb portant le m√™me nom que votre GameObject racine.\\nVous pouvez activer le r√©glage Smart Export (via Edit/Project Settings/Needle) pour n'exporter que lorsqu'une modification est d√©tect√©e dans la hi√©rarchie de cet objet.\\n:::details Comment emp√™cher l'exportation d'objets sp√©cifiques\\nLes objets avec le tag EditorOnly seront ignor√©s lors de l'export, y compris leur hi√©rarchie enfant.\\nSachez que cela est pr√©f√©rable √† la d√©sactivation des objets, car les objets d√©sactiv√©s seront toujours export√©s au cas o√π ils seraient r√©activ√©s plus tard.\\n:::\\nSi vous souhaitez diviser votre application en plusieurs niveaux ou sc√®nes, vous pouvez simplement utiliser le composant Scen"},"headers":[{"level":2,"title":"üì¶ Exporter des fichiers glTF","slug":"exporter-des-fichiers-gltf","link":"#exporter-des-fichiers-gltf","children":[{"level":3,"title":"Chargement paresseux et multiples niveaux / sc√®nes","slug":"chargement-paresseux-et-multiples-niveaux-sc-nes","link":"#chargement-paresseux-et-multiples-niveaux-sc-nes","children":[]},{"level":3,"title":"Complexit√© recommand√©e par glTF","slug":"complexit-recommand-e-par-gltf","link":"#complexit-recommand-e-par-gltf","children":[]},{"level":3,"title":"Prefabs","slug":"prefabs","link":"#prefabs","children":[]},{"level":3,"title":"Scene Assets","slug":"scene-assets","link":"#scene-assets","children":[]}]},{"level":2,"title":"üèá Exporter des Animations","slug":"exporter-des-animations","link":"#exporter-des-animations","children":[]},{"level":2,"title":"üåç Exporter le Skybox","slug":"exporter-le-skybox","link":"#exporter-le-skybox","children":[]},{"level":2,"title":"‚ú® Exporter les Mat√©riaux","slug":"exporter-les-mat-riaux","link":"#exporter-les-mat-riaux","children":[{"level":3,"title":"Mat√©riaux Bas√©s sur la Physique (PBR)","slug":"mat-riaux-bas-s-sur-la-physique-pbr","link":"#mat-riaux-bas-s-sur-la-physique-pbr","children":[]},{"level":3,"title":"Shaders personnalis√©s","slug":"shaders-personnalis-s","link":"#shaders-personnalis-s","children":[]}]},{"level":2,"title":"üí° Exporter les Lightmaps","slug":"exporter-les-lightmaps","link":"#exporter-les-lightmaps","children":[{"level":3,"title":"Param√®tres Lightmap recommand√©s","slug":"param-tres-lightmap-recommand-s","link":"#param-tres-lightmap-recommand-s","children":[]},{"level":3,"title":"M√©langer les objets cuits et non cuits","slug":"m-langer-les-objets-cuits-et-non-cuits","link":"#m-langer-les-objets-cuits-et-non-cuits","children":[]}]}],"git":{"updatedTime":1745319699000,"contributors":[{"name":"Marcel Wiessler","username":"","email":"marcel@gaisterhand.de","commits":1}],"changelog":[{"hash":"833ce0af31c32254139592f63afbfed4fac50b2a","time":1745319699000,"email":"marcel@gaisterhand.de","author":"Marcel Wiessler","message":"Language: add FR and HI"}]},"filePathRelative":"lang/fr/export.md"}`);export{g as comp,f as data};
