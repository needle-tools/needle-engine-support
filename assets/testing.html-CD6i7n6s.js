import{_ as e}from"./switch-to-mkcert-BwslGAOn.js";import{_ as i,c as o,e as d,o as l}from"./app-9T6lAodh.js";const n={};function a(s,t){return l(),o("div",null,t[0]||(t[0]=[d('<h2 id="" tabindex="-1"><a class="header-anchor" href="#"><span>स्थानीय डिवाइसों पर परीक्षण</span></a></h2><p>जब आप हमारे टेम्पलेट का उपयोग करते हैं, तो Needle Engine आपके लिए एक स्थानीय डेवलपमेंट सर्वर चलाता है। बस प्ले दबाएं, और आपके डिफ़ॉल्ट ब्राउज़र में एक वेबसाइट खुल जाएगी, जो आपके स्थानीय डिवाइस पर परीक्षण के लिए तैयार है। उसी नेटवर्क में अन्य डिवाइसों पर परीक्षण के लिए, आपको एक सेल्फ-साइन किए गए सर्टिफिकेट (नीचे देखें) स्थापित करना पड़ सकता है।</p><p>जब कस्टम सेटअप / फ्रेमवर्क का उपयोग कर रहे हों, तो सुरक्षित स्थानीय डेवलपमेंट सर्वर चलाने के तरीके के बारे में जानने के लिए कृपया अपने फ्रेमवर्क के दस्तावेज़ देखें।</p><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>हमारा स्थानीय सर्वर <code>localhost:3000</code> के बजाय आपके स्थानीय नेटवर्क में IP एड्रेस (जैसे <code>https://192.168.0.123:3000</code>) का उपयोग करता है। यह आपको मोबाइल डिवाइसों, VR ग्लासेस और उसी नेटवर्क में अन्य मशीनों से अपने प्रोजेक्ट को तेज़ी से देखने और परीक्षण करने की अनुमति देता है।</p><p>हम पुराने HTTP के बजाय HTTPS का उपयोग कर रहे हैं, क्योंकि आधुनिक शक्तिशाली वेब API जैसे WebXR के लिए सुरक्षित कनेक्शन की आवश्यकता होती है - S का अर्थ &quot;सुरक्षित&quot; है।</p></div><h2 id="-1" tabindex="-1"><a class="header-anchor" href="#-1"><span>डेवलपमेंट के लिए सेल्फ-साइन किया गया सर्टिफिकेट सेट करना</span></a></h2><p>अलग-अलग ऑपरेटिंग सिस्टम के लिए स्थानीय डेवलपमेंट के लिए अलग-अलग सुरक्षा आवश्यकताएं होती हैं। आमतौर पर, वेबसाइट प्रदर्शित करना ऑटो-जनरेटेड असुरक्षित सर्टिफिकेट के साथ भी काम करेगा, लेकिन ब्राउज़र विश्वास की कमी के बारे में चेतावनी दे सकते हैं और कुछ सुविधाएँ उपलब्ध नहीं होती हैं। यहाँ एक सारांश है:</p><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>एक सहज डेवलपमेंट अनुभव के लिए अपने डेवलपमेंट डिवाइसों पर विश्वसनीय सेल्फ-साइन किए गए सर्टिफिकेट स्थापित करने की सलाह दी जाती है। इस पृष्ठ के निचले भाग में चरण देखें।</p></div><p><strong>डिफ़ॉल्ट – ऑटो-जनरेटेड असुरक्षित सर्टिफिकेट के साथ</strong><em>ब्राउज़र में प्रोजेक्ट खोलने पर एक सर्टिफिकेट चेतावनी प्रदर्शित करता है।</em><em><a href="https://github.com/vitejs/vite-plugin-basic-ssl" target="_blank" rel="noopener noreferrer">vite-plugin-basic-ssl</a> npm पैकेज का उपयोग करता है।</em></p><p>ब्राउज़र और स्थानीय डेवलपमेंट सर्वर के बीच संचार करने के लिए हम websocket कनेक्शन का उपयोग कर रहे हैं। Websockets को काम करने के लिए सुरक्षित कनेक्शन (HTTPS) की आवश्यकता होती है। प्लेटफ़ॉर्म के आधार पर, आपको स्थानीय डेवलपमेंट के लिए एक कस्टम सर्टिफिकेट सेट करने की आवश्यकता हो सकती है। Android और Windows को कस्टम सर्टिफिकेट की आवश्यकता नहीं होती है, लेकिन iOS और MacOS को होती है।</p><table><thead><tr><th>OS</th><th>ब्राउज़र में देखना<br>(एक सुरक्षा चेतावनी के साथ)</th><th>स्वचालित रीलोड</th></tr></thead><tbody><tr><td>Windows</td><td>(✓)</td><td>✓</td></tr><tr><td>Linux</td><td>(✓)</td><td>✓</td></tr><tr><td>Android</td><td>(✓)</td><td>✓</td></tr><tr><td>macOS</td><td>(✓)</td><td>❌</td></tr><tr><td>iOS</td><td>(✓ Safari और Chrome, पेज रीलोड के बाद)<br>❌ Mozilla XR Viewer</td><td>❌</td></tr><tr><td>Xcode Simulators</td><td>(✓ पेज रीलोड के बाद)</td><td>❌</td></tr></tbody></table><p><strong>सेल्फ-साइन किए गए, विश्वसनीय रूट सर्टिफिकेट के साथ</strong><em>कोई सुरक्षा चेतावनी प्रदर्शित नहीं होती है। आपको अपने डिवाइस(ओं) पर जनरेट किया गया सर्टिफिकेट स्थापित करने की आवश्यकता है।</em><em><a href="https://github.com/liuweiGL/vite-plugin-mkcert" target="_blank" rel="noopener noreferrer">vite-plugin-mkcert</a> npm पैकेज का उपयोग करता है।</em></p><table><thead><tr><th>OS</th><th>ब्राउज़र में देखना</th><th>स्वचालित रीलोड</th></tr></thead><tbody><tr><td>Windows</td><td>✓</td><td>✓</td></tr><tr><td>Linux</td><td>✓</td><td>✓</td></tr><tr><td>Android</td><td>✓</td><td>✓</td></tr><tr><td>macOS</td><td>✓</td><td>✓</td></tr><tr><td>iOS</td><td>✓</td><td>✓</td></tr></tbody></table><h3 id="-2" tabindex="-1"><a class="header-anchor" href="#-2"><span>सेल्फ-साइन किया गया डेवलपमेंट सर्टिफिकेट जनरेट करना</span></a></h3><ul><li><p>Unity/Blender में, VS Code खोलने के लिए &quot;Open Workspace&quot; पर क्लिक करें</p></li><li><p>जाँच करें कि आप अपनी <code>vite.config.ts</code> फ़ाइल में <code>vite-plugin-basic-ssl</code> के बजाय <code>vite-plugin-mkcert</code> का उपयोग कर रहे हैं (बाद वाला एक विश्वसनीय रूट सर्टिफिकेट जनरेट नहीं करता है, जिसकी हमें आवश्यकता है):</p><ul><li><code>package.json</code> खोलें</li><li><code>devDependencies</code> से <code>&quot;@vitejs/plugin-basic-ssl&quot;</code> वाली लाइन हटा दें</li><li>VS Code में एक Terminal खोलें और <code>npm install vite-plugin-mkcert --save-dev</code> चलाएं जो नवीनतम संस्करण जोड़ देगा</li><li><code>vite.config.ts</code> खोलें और <code>import basicSsl from &#39;@vitejs/plugin-basic-ssl&#39;</code> को <code>import mkcert from&#39;vite-plugin-mkcert&#39;</code> से बदलें</li><li><code>plugins: [</code> में, <code>basicSsl(),</code> को <code>mkcert(),</code> से बदलें</li><li>package.json अब ऐसा दिखता है: <img src="'+e+'" alt=""></li></ul></li><li><p>VS Code के टर्मिनल से एक बार <code>npm run start</code> चलाएं</p><ul><li>Windows पर, यह एक नई विंडो खोलेगा और सर्टिफिकेट बनाने और स्थापित करने की प्रक्रिया में आपका मार्गदर्शन करेगा</li><li>MacOS पर, टर्मिनल आपके पासवर्ड के लिए प्रॉम्प्ट करेगा और फिर सर्टिफिकेट जनरेट और स्थापित करेगा।</li><li>यदि आपको <code>Error: Port 3000 is already in use</code> त्रुटि मिल रही है, तो कृपया उस सर्वर को बंद कर दें जो Unity से अभी भी चल रहा हो।</li></ul></li><li><p>जनरेट किया गया सर्टिफिकेट स्वचालित रूप से उस मशीन पर स्थापित हो जाएगा जिस पर आपने इसे जनरेट किया था।</p></li><li><p>आप टर्मिनल प्रक्रिया को फिर से रोक सकते हैं।</p></li><li><p>अब से, Unity/Blender में Play दबाने पर स्थानीय सर्वर के लिए जनरेट किया गया सर्टिफिकेट उपयोग होगा, और कोई &quot;सुरक्षा चेतावनी&quot; नहीं दिखाई जाएगी, क्योंकि आपका ब्राउज़र अब स्थानीय कनेक्शन पर भरोसा करता है।</p></li></ul><h2 id="-3" tabindex="-1"><a class="header-anchor" href="#-3"><span>अपने डेवलपमेंट डिवाइसों पर सर्टिफिकेट स्थापित करना</span></a></h2><p>अपने डेवलपमेंट डिवाइसों पर, आपको जनरेट किए गए सर्टिफिकेट को <em>स्थापित</em> करना होगा और OS को उस पर <em>भरोसा</em> करने की अनुमति देनी होगी। यह प्रत्येक OS के लिए अलग है। उनमें से प्रत्येक के लिए, आपको जनरेट की गई rootCA.pem फ़ाइल की आवश्यकता होगी, और उसे उस डिवाइस पर भेजना होगा जिसे आप प्रमाणित करना चाहते हैं।</p><p><strong>Windows पर:</strong> <code>Users/&lt;your-user&gt;/.vite-plugin-mkcert/rootCA.pem</code> में सर्टिफिकेट खोजें <strong>MacOS पर:</strong> <code>Users/&lt;your-user&gt;/.vite-plugin-mkcert/rootCA.pem</code> में सर्टिफिकेट खोजें</p><p>डिवाइस को स्वयं को भेजें (जैसे E-Mail, AirDrop, iCloud, USB, Slack, ...) ताकि आप अपने डेवलपमेंट डिवाइसों पर इसे एक्सेस कर सकें।</p><h3 id="android" tabindex="-1"><a class="header-anchor" href="#android"><span>Android पर सर्टिफिकेट स्थापित करना</span></a></h3><ol><li>फ़ाइल खोलें। आपको सर्टिफिकेट स्थापित करने के लिए प्रॉम्प्ट किया जाएगा।</li></ol><h3 id="ios-ipados-visionos" tabindex="-1"><a class="header-anchor" href="#ios-ipados-visionos"><span>iOS / iPadOS / VisionOS पर सर्टिफिकेट स्थापित करना</span></a></h3><ol><li>फ़ाइल खोलें।</li><li>आपको अपने डिवाइस में प्रोफ़ाइल <em>जोड़ने</em> के लिए प्रॉम्प्ट किया जाएगा। पुष्टि करें।</li><li>Settings पर जाएं।</li><li>एक नई एंट्री &quot;Profile&quot; होगी। उसे चुनें और इस डिवाइस के लिए प्रोफ़ाइल को <em>सक्रिय</em> होने की अनुमति दें।</li><li>iOS / iPadOS पर, आपको &quot;Root Certificate Trust&quot; की भी अनुमति देनी होगी। इसके लिए, <code>Trust</code> खोजें या <code>Settings &gt; General &gt; About &gt; Info &gt; Certificate Trust Settings</code> पर जाएं और रूट सर्टिफिकेट के लिए पूर्ण विश्वास सक्षम करें।</li></ol><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>सर्टिफिकेट स्वचालित रूप से उस मशीन पर स्थापित हो जाता है जिस पर आपने इसे जनरेट किया था। स्थानीय नेटवर्क में अन्य मशीनों के लिए, विश्वसनीय कनेक्शन स्थापित करने के लिए नीचे दिए गए चरणों का पालन करें।</p></div><h3 id="macos" tabindex="-1"><a class="header-anchor" href="#macos"><span>किसी अन्य MacOS मशीन पर सर्टिफिकेट स्थापित करना</span></a></h3><ol><li>फ़ाइल खोलें। Keychain Access खुलेगा और आपको सर्टिफिकेट स्थापित करने की अनुमति देगा।</li><li>आपको &quot;Trust&quot; को &quot;Always allow&quot; पर सेट करना पड़ सकता है।</li></ol><h3 id="windows" tabindex="-1"><a class="header-anchor" href="#windows"><span>किसी अन्य Windows मशीन पर सर्टिफिकेट स्थापित करना</span></a></h3><ol><li><kbd>Windows key</kbd> + <code>certmgr</code> टाइप करके <code>certmgr</code> (&quot;Manage user certificates&quot;) खोलें।</li><li>बाईं साइडबार में, &quot;Trusted Root Certification Authorities&quot; चुनें।</li><li>&quot;Certificates&quot; पर राइट-क्लिक करें और &quot;All Tasks &gt; Import&quot; चुनें।</li><li><code>rootCA.pem</code> फ़ाइल चुनें (आपको फ़ाइल प्रकार को &quot;all&quot; में बदलना पड़ सकता है) और निर्देशों का पालन करें।</li></ol><hr><p>पेज स्वचालित रूप से AI का उपयोग करके अनुवादित</p>',29)]))}const p=i(n,[["render",a]]),h=JSON.parse('{"path":"/lang/hi/testing.html","title":"Testing on local devices","lang":"hi-IN","frontmatter":{"title":"Testing on local devices","head":[["meta",{"name":"og:image","content":"https://engine.needle.tools/docs/.preview/testing on local devices_hi.png"}],["meta",{"name":"og:description","content":"---\\nजब आप हमारे टेम्पलेट का उपयोग करते हैं, तो Needle Engine आपके लिए एक स्थानीय डेवलपमेंट सर्वर चलाता है। बस प्ले दबाएं, और आपके डिफ़ॉल्ट ब्राउज़र में एक वेबसाइट खुल जाएगी, जो आपके स्थानीय डिवाइस पर परीक्षण के लिए तैयार है। उसी नेटवर्क में अन्य डिवाइसों पर परीक्षण के लिए, आपको एक सेल्फ-साइन किए गए सर्टिफिकेट (नीचे देखें) स्थापित करना पड़ सकता है।\\nजब कस्टम सेटअप / फ्रेमवर्क का उपयोग कर रहे हों, तो सुरक्षित स्थानीय डेवलपमेंट सर्वर चलाने के तरीके के बारे में जानने के लिए कृपया अपने फ्रेमवर्क के दस्तावेज़ देखें।\\n::: tip\\nहमारा स्थानीय सर्वर localhost:3000 के बजाय आपके स्थानीय नेटवर्क में IP एड्रेस (जैसे https://192.168.0.123:3000) का उपयोग करता है। यह आपको मोबाइल डिवाइसों, VR ग्लासेस और उसी नेटवर्क में अन्य मशीनों से अपने प्रोजेक्ट को तेज़ी से देखने और परीक्षण करने की अनुमति देता है।\\nहम पुराने HTTP के बजाय HTTPS का उपयोग कर रहे हैं, क्योंकि आधुनिक शक्तिशाली वेब API जैसे WebXR के लिए सुरक्षित कनेक्शन की आवश्यकता होती है"}]],"description":"---\\nजब आप हमारे टेम्पलेट का उपयोग करते हैं, तो Needle Engine आपके लिए एक स्थानीय डेवलपमेंट सर्वर चलाता है। बस प्ले दबाएं, और आपके डिफ़ॉल्ट ब्राउज़र में एक वेबसाइट खुल जाएगी, जो आपके स्थानीय डिवाइस पर परीक्षण के लिए तैयार है। उसी नेटवर्क में अन्य डिवाइसों पर परीक्षण के लिए, आपको एक सेल्फ-साइन किए गए सर्टिफिकेट (नीचे देखें) स्थापित करना पड़ सकता है।\\nजब कस्टम सेटअप / फ्रेमवर्क का उपयोग कर रहे हों, तो सुरक्षित स्थानीय डेवलपमेंट सर्वर चलाने के तरीके के बारे में जानने के लिए कृपया अपने फ्रेमवर्क के दस्तावेज़ देखें।\\n::: tip\\nहमारा स्थानीय सर्वर localhost:3000 के बजाय आपके स्थानीय नेटवर्क में IP एड्रेस (जैसे https://192.168.0.123:3000) का उपयोग करता है। यह आपको मोबाइल डिवाइसों, VR ग्लासेस और उसी नेटवर्क में अन्य मशीनों से अपने प्रोजेक्ट को तेज़ी से देखने और परीक्षण करने की अनुमति देता है।\\nहम पुराने HTTP के बजाय HTTPS का उपयोग कर रहे हैं, क्योंकि आधुनिक शक्तिशाली वेब API जैसे WebXR के लिए सुरक्षित कनेक्शन की आवश्यकता होती है"},"headers":[{"level":2,"title":"स्थानीय डिवाइसों पर परीक्षण","slug":"","link":"#","children":[]},{"level":2,"title":"डेवलपमेंट के लिए सेल्फ-साइन किया गया सर्टिफिकेट सेट करना","slug":"-1","link":"#-1","children":[{"level":3,"title":"सेल्फ-साइन किया गया डेवलपमेंट सर्टिफिकेट जनरेट करना","slug":"-2","link":"#-2","children":[]}]},{"level":2,"title":"अपने डेवलपमेंट डिवाइसों पर सर्टिफिकेट स्थापित करना","slug":"-3","link":"#-3","children":[{"level":3,"title":"Android पर सर्टिफिकेट स्थापित करना","slug":"android","link":"#android","children":[]},{"level":3,"title":"iOS / iPadOS / VisionOS पर सर्टिफिकेट स्थापित करना","slug":"ios-ipados-visionos","link":"#ios-ipados-visionos","children":[]},{"level":3,"title":"किसी अन्य MacOS मशीन पर सर्टिफिकेट स्थापित करना","slug":"macos","link":"#macos","children":[]},{"level":3,"title":"किसी अन्य Windows मशीन पर सर्टिफिकेट स्थापित करना","slug":"windows","link":"#windows","children":[]}]}],"git":{"updatedTime":1745319699000,"contributors":[{"name":"Marcel Wiessler","username":"","email":"marcel@gaisterhand.de","commits":1}],"changelog":[{"hash":"833ce0af31c32254139592f63afbfed4fac50b2a","time":1745319699000,"email":"marcel@gaisterhand.de","author":"Marcel Wiessler","message":"Language: add FR and HI"}]},"filePathRelative":"lang/hi/testing.md"}');export{p as comp,h as data};
